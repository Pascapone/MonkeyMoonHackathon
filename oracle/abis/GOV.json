{
  "contractName": "GOV",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalNum",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint32",
          "name": "start",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "end",
          "type": "uint32"
        }
      ],
      "name": "addBasicProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint32",
          "name": "start",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "end",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "newTaxesAddress",
          "type": "address"
        }
      ],
      "name": "addTaxesProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "executeCurrentProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "accountVote",
          "type": "bool"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentProposal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end",
              "type": "uint256"
            },
            {
              "internalType": "enum GOV.ProposalType",
              "name": "proposalType",
              "type": "uint8"
            },
            {
              "internalType": "uint64",
              "name": "upvotes",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "downvotes",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "addressToChange",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "internalType": "struct GOV.Proposal",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "getProposalByIndex",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end",
              "type": "uint256"
            },
            {
              "internalType": "enum GOV.ProposalType",
              "name": "proposalType",
              "type": "uint8"
            },
            {
              "internalType": "uint64",
              "name": "upvotes",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "downvotes",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "addressToChange",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "internalType": "struct GOV.Proposal",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"start\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"end\",\"type\":\"uint32\"}],\"name\":\"addBasicProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"start\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"end\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"newTaxesAddress\",\"type\":\"address\"}],\"name\":\"addTaxesProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeCurrentProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentProposal\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"internalType\":\"enum GOV.ProposalType\",\"name\":\"proposalType\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"upvotes\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"downvotes\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"addressToChange\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct GOV.Proposal\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"getProposalByIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"internalType\":\"enum GOV.ProposalType\",\"name\":\"proposalType\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"upvotes\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"downvotes\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"addressToChange\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct GOV.Proposal\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalNum\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"accountVote\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/Gov.sol\":\"GOV\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/contracts/Gov.sol\":{\"keccak256\":\"0xe23bab50f0005022f85bcdd1af85030e94e1ead5e976f8dae2ccc75c1f52c569\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8560fa9e42864086cb58a05adc00296d00ade86df13a6a42d79c92f5f28f413\",\"dweb:/ipfs/QmUjSMV1akqcQg587y9a41ctwMuxXVPmpd4Qc8FR2a9HHc\"]},\"project:/src/contracts/IMonkeyMoonToken.sol\":{\"keccak256\":\"0x329cd6cacbaf4e5c48e0ba15f018f11f11193b87f4fa6a9ff6e06f7af470cff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52cf5424390b9e5fb2655d8384290479f536df94e2534b696e41d25b4a71c614\",\"dweb:/ipfs/QmYSxmtfu2j84URCzy36iDJw1U4XmP4xHuQ7nubw8pEk7M\"]},\"project:/src/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"project:/src/contracts/token/ERC20.sol\":{\"keccak256\":\"0x50988e5eca9d886ae3e9dbbc8598a7b5dd8d7b0f5e8c9f9f1b43dfded99e46f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8123810963e17f1aeea59aa24e6dd1a443cbd424fcf162859c5634f018e53e46\",\"dweb:/ipfs/QmbhsGsHmTHpfsHWNxfvkyACQxYt1zmFNwjqbpfCY7pgAf\"]},\"project:/src/contracts/token/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"project:/src/contracts/token/IERC20Metadata.sol\":{\"keccak256\":\"0xb63c77a8047f65f823e21c5963e2305ded0691eb80101cdf533c91e84acaafdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://283f5cf2881c751e200196e8c8d1d3bf91779e1231aee67191d04783fcb07c91\",\"dweb:/ipfs/QmTvnjekrmwSzcV565AbMmRCMVQ1hgAE6bzX9iR6XhynVW\"]},\"project:/src/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:24020:40",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "91:260:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "101:74:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "125:41:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:49:40"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "110:14:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "110:65:40"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "101:5:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "191:5:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "198:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "184:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "184:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "184:21:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "214:27:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "229:5:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "236:4:40",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "225:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:16:40"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "218:3:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "260:3:40"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "265:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "256:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "256:16:40"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "274:3:40"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "253:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:25:40"
                  },
                  "nodeType": "YulIf",
                  "src": "250:2:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "328:3:40"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "333:3:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "338:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "304:23:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "304:41:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "304:41:40"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "64:3:40",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "69:6:40",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "77:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "85:5:40",
                "type": ""
              }
            ],
            "src": "7:344:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "409:87:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "419:29:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "441:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "428:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "428:20:40"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "419:5:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "484:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "457:26:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "457:33:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "457:33:40"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "387:6:40",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "395:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "403:5:40",
                "type": ""
              }
            ],
            "src": "357:139:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "551:84:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "561:29:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "583:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "570:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "570:20:40"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "561:5:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "623:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "599:23:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "599:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "599:30:40"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "529:6:40",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "537:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "545:5:40",
                "type": ""
              }
            ],
            "src": "502:133:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "717:211:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "766:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "775:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "778:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "768:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "768:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "768:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "745:6:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "753:4:40",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "741:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "741:17:40"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "760:3:40"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "737:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "737:27:40"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "730:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "730:35:40"
                  },
                  "nodeType": "YulIf",
                  "src": "727:2:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "791:34:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "818:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "805:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "805:20:40"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "795:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "834:88:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "895:6:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "903:4:40",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "891:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "891:17:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "910:6:40"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "918:3:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "843:47:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "843:79:40"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "834:5:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "695:6:40",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "703:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "711:5:40",
                "type": ""
              }
            ],
            "src": "655:273:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "997:80:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1007:22:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1022:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1016:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1016:13:40"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1007:5:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1065:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1038:26:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1038:33:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1038:33:40"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "975:6:40",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "983:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "991:5:40",
                "type": ""
              }
            ],
            "src": "934:143:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1134:86:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1144:29:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1166:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1153:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1153:20:40"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1144:5:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1208:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint32",
                      "nodeType": "YulIdentifier",
                      "src": "1182:25:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1182:32:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1182:32:40"
                }
              ]
            },
            "name": "abi_decode_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1112:6:40",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1120:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1128:5:40",
                "type": ""
              }
            ],
            "src": "1083:137:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1292:196:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1338:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1347:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1350:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1340:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1340:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1340:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1313:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1322:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1309:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1309:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1334:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1305:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1305:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "1302:2:40"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1364:117:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1379:15:40",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1393:1:40",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1383:6:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1408:63:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1443:9:40"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1454:6:40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1439:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1439:22:40"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1463:7:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1418:20:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1418:53:40"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1408:6:40"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1262:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1273:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1285:6:40",
                "type": ""
              }
            ],
            "src": "1226:262:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1557:193:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1603:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1612:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1615:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1605:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1605:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1605:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1578:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1587:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1574:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1574:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1599:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1570:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1570:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "1567:2:40"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1629:114:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1644:15:40",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1658:1:40",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1648:6:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1673:60:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1705:9:40"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1716:6:40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1701:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1701:22:40"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1725:7:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1683:17:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1683:50:40"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1673:6:40"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1527:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1538:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1550:6:40",
                "type": ""
              }
            ],
            "src": "1494:256:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1864:553:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1910:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1919:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1922:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1912:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1912:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1912:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1885:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1894:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1881:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1881:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1906:2:40",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1877:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1877:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "1874:2:40"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1936:220:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1951:45:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1982:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1993:1:40",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1978:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1978:17:40"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1965:12:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1965:31:40"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1955:6:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2043:16:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2052:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2055:1:40",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2045:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2045:12:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2045:12:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2015:6:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2023:18:40",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2012:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2012:30:40"
                      },
                      "nodeType": "YulIf",
                      "src": "2009:2:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2073:73:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2118:9:40"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2129:6:40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2114:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2114:22:40"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2138:7:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "2083:30:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2083:63:40"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2073:6:40"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2166:117:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2181:16:40",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2195:2:40",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2185:6:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2211:62:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2245:9:40"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2256:6:40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2241:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2241:22:40"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2265:7:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint32",
                          "nodeType": "YulIdentifier",
                          "src": "2221:19:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2221:52:40"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2211:6:40"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2293:117:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2308:16:40",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2322:2:40",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2312:6:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2338:62:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2372:9:40"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2383:6:40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2368:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2368:22:40"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2392:7:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint32",
                          "nodeType": "YulIdentifier",
                          "src": "2348:19:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2348:52:40"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2338:6:40"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_uint32t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1818:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1829:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1841:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1849:6:40",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1857:6:40",
                "type": ""
              }
            ],
            "src": "1756:661:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2548:682:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2595:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2604:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2607:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2597:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2597:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2597:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2569:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2578:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2565:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2565:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2590:3:40",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2561:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2561:33:40"
                  },
                  "nodeType": "YulIf",
                  "src": "2558:2:40"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2621:220:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2636:45:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2667:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2678:1:40",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2663:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2663:17:40"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2650:12:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2650:31:40"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2640:6:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2728:16:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2737:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2740:1:40",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2730:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2730:12:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2730:12:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2700:6:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2708:18:40",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2697:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2697:30:40"
                      },
                      "nodeType": "YulIf",
                      "src": "2694:2:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2758:73:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2803:9:40"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2814:6:40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2799:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2799:22:40"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2823:7:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "2768:30:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2768:63:40"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2758:6:40"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2851:117:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2866:16:40",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2880:2:40",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2870:6:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2896:62:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2930:9:40"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2941:6:40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2926:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2926:22:40"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2950:7:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint32",
                          "nodeType": "YulIdentifier",
                          "src": "2906:19:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2906:52:40"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2896:6:40"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2978:117:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2993:16:40",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3007:2:40",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2997:6:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3023:62:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3057:9:40"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3068:6:40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3053:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3053:22:40"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3077:7:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint32",
                          "nodeType": "YulIdentifier",
                          "src": "3033:19:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3033:52:40"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3023:6:40"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3105:118:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3120:16:40",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3134:2:40",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3124:6:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3150:63:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3185:9:40"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3196:6:40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3181:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3181:22:40"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3205:7:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3160:20:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3160:53:40"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3150:6:40"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_uint32t_uint32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2494:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2505:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2517:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2525:6:40",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2533:6:40",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2541:6:40",
                "type": ""
              }
            ],
            "src": "2423:807:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3313:207:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3359:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3368:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3371:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3361:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3361:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3361:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3334:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3343:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3330:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3330:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3355:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3326:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3326:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "3323:2:40"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3385:128:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3400:15:40",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3414:1:40",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3404:6:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3429:74:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3475:9:40"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3486:6:40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3471:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3471:22:40"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3495:7:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3439:31:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3439:64:40"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3429:6:40"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3283:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3294:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3306:6:40",
                "type": ""
              }
            ],
            "src": "3236:284:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3591:195:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3637:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3646:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3649:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3639:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3639:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3639:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3612:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3621:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3608:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3608:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3633:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3604:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3604:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "3601:2:40"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3663:116:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3678:15:40",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3692:1:40",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3682:6:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3707:62:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3741:9:40"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3752:6:40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3737:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3737:22:40"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3761:7:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint32",
                          "nodeType": "YulIdentifier",
                          "src": "3717:19:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3717:52:40"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3707:6:40"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3561:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3572:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3584:6:40",
                "type": ""
              }
            ],
            "src": "3526:260:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3847:53:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3864:3:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3887:5:40"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3869:17:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3869:24:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3857:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3857:37:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3857:37:40"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3835:5:40",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3842:3:40",
                "type": ""
              }
            ],
            "src": "3792:108:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3971:53:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3988:3:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4011:5:40"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3993:17:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3993:24:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3981:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3981:37:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3981:37:40"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3959:5:40",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3966:3:40",
                "type": ""
              }
            ],
            "src": "3906:118:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4079:50:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4096:3:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4116:5:40"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "4101:14:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4101:21:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4089:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4089:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4089:34:40"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4067:5:40",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4074:3:40",
                "type": ""
              }
            ],
            "src": "4030:99:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4203:79:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4220:3:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4269:5:40"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_ProposalType_$10_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "4225:43:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4225:50:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4213:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4213:63:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4213:63:40"
                }
              ]
            },
            "name": "abi_encode_t_enum$_ProposalType_$10_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4191:5:40",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4198:3:40",
                "type": ""
              }
            ],
            "src": "4135:147:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4370:262:40",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4380:53:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4427:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4394:32:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4394:39:40"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4384:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4442:68:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4498:3:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4503:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4449:48:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4449:61:40"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4442:3:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4545:5:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4552:4:40",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4541:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4541:16:40"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4559:3:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4564:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4519:21:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4519:52:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4519:52:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4580:46:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4591:3:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4618:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "4596:21:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4596:29:40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4587:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4587:39:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4580:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4351:5:40",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4358:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4366:3:40",
                "type": ""
              }
            ],
            "src": "4288:344:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4784:222:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4794:74:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4860:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4865:2:40",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4801:58:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4801:67:40"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4794:3:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4889:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4894:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4885:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4885:11:40"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4898:34:40",
                        "type": "",
                        "value": "End of proposal needs be after s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4878:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4878:55:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4878:55:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4954:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4959:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4950:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4950:12:40"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4964:6:40",
                        "type": "",
                        "value": "tart"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4943:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4943:28:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4943:28:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4981:19:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4992:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4997:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4988:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4988:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4981:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_021bbc0d0cd3b18cd09c04eb2ee2bea6559b9c286ce3e8b0e320c330e50d21c4_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4772:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4780:3:40",
                "type": ""
              }
            ],
            "src": "4638:368:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5158:247:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5168:74:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5234:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5239:2:40",
                        "type": "",
                        "value": "61"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5175:58:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5175:67:40"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5168:3:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5263:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5268:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5259:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5259:11:40"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5272:34:40",
                        "type": "",
                        "value": "Current proposal needs to end be"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5252:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5252:55:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5252:55:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5328:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5333:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5324:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5324:12:40"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5338:31:40",
                        "type": "",
                        "value": "fore a new one can be created"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5317:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5317:53:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5317:53:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5380:19:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5391:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5396:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5387:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5387:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5380:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_065e43b5ef1d4e76d7edd0fbe0a29f349b29104487f97e8b32ca1643b06c678e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5146:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5154:3:40",
                "type": ""
              }
            ],
            "src": "5012:393:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5557:224:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5567:74:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5633:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5638:2:40",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5574:58:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5574:67:40"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5567:3:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5662:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5667:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5658:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5658:11:40"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5671:34:40",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5651:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5651:55:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5651:55:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5727:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5732:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5723:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5723:12:40"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5737:8:40",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5716:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5716:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5716:30:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5756:19:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5767:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5772:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5763:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5763:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5756:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5545:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5553:3:40",
                "type": ""
              }
            ],
            "src": "5411:370:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5933:170:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5943:74:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6009:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6014:2:40",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5950:58:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5950:67:40"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5943:3:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6038:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6043:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6034:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6034:11:40"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6047:20:40",
                        "type": "",
                        "value": "Voting is not open"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6027:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6027:41:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6027:41:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6078:19:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6089:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6094:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6085:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6085:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6078:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4bd03e1a30494a055957512ea8d56151bd2a1a9090f409d257d985dbb793b2b6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5921:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5929:3:40",
                "type": ""
              }
            ],
            "src": "5787:316:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6255:165:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6265:74:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6331:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6336:2:40",
                        "type": "",
                        "value": "13"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6272:58:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6272:67:40"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6265:3:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6360:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6365:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6356:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6356:11:40"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6369:15:40",
                        "type": "",
                        "value": "Already voted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6349:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6349:36:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6349:36:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6395:19:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6406:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6411:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6402:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6402:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6395:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6243:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6251:3:40",
                "type": ""
              }
            ],
            "src": "6109:311:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6572:220:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6582:74:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6648:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6653:2:40",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6589:58:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6589:67:40"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6582:3:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6677:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6682:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6673:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6673:11:40"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6686:34:40",
                        "type": "",
                        "value": "Proposal needs to be in the futu"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6666:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6666:55:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6666:55:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6742:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6747:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6738:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6738:12:40"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6752:4:40",
                        "type": "",
                        "value": "re"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6731:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6731:26:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6731:26:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6767:19:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6778:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6783:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6774:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6774:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6767:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_5b54396c962020cdeb47afea5d4fe26f8a3f301ae583ed844e999bb77ee3a0b8_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6560:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6568:3:40",
                "type": ""
              }
            ],
            "src": "6426:366:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6944:222:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6954:74:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7020:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7025:2:40",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6961:58:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6961:67:40"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6954:3:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7049:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7054:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7045:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7045:11:40"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7058:34:40",
                        "type": "",
                        "value": "Not enough tokens for vorting ri"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7038:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7038:55:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7038:55:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7114:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7119:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7110:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7110:12:40"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7124:6:40",
                        "type": "",
                        "value": "ghts"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7103:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7103:28:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7103:28:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7141:19:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7152:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7157:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7148:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7148:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7141:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6478cb6d77054c533019506f690616008a73b4d8a8e6ce0e838c9006bc9d3c9f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6932:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6940:3:40",
                "type": ""
              }
            ],
            "src": "6798:368:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7318:220:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7328:74:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7394:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7399:2:40",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7335:58:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7335:67:40"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7328:3:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7423:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7428:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7419:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7419:11:40"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7432:34:40",
                        "type": "",
                        "value": "Proposal has already been execut"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7412:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7412:55:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7412:55:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7488:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7493:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7484:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7484:12:40"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7498:4:40",
                        "type": "",
                        "value": "ed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7477:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7477:26:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7477:26:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7513:19:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7524:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7529:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7520:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7520:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7513:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6c2018ab3281d5f803db36d5c7db0892a89e978895e4947aa99e1a29a222dff3_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7306:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7314:3:40",
                "type": ""
              }
            ],
            "src": "7172:366:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7690:219:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7700:74:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7766:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7771:2:40",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7707:58:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7707:67:40"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7700:3:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7795:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7800:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7791:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7791:11:40"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7804:34:40",
                        "type": "",
                        "value": "Taxes address is the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7784:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7784:55:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7784:55:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7860:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7865:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7856:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7856:12:40"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7870:3:40",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7849:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7849:25:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7849:25:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7884:19:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7895:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7900:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7891:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7891:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7884:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8f1cb6ae5f8d388ca758957909026d881ea8885e3881caba255c4110406af0ed_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7678:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7686:3:40",
                "type": ""
              }
            ],
            "src": "7544:365:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8061:184:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8071:74:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8137:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8142:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8078:58:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8078:67:40"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8071:3:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8166:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8171:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8162:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8162:11:40"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8175:34:40",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8155:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8155:55:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8155:55:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8220:19:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8231:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8236:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8227:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8227:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8220:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8049:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8057:3:40",
                "type": ""
              }
            ],
            "src": "7915:330:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8397:176:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8407:74:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8473:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8478:2:40",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8414:58:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8414:67:40"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8407:3:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8502:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8507:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8498:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8498:11:40"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8511:26:40",
                        "type": "",
                        "value": "Proposal hasnt ended yet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8491:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8491:47:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8491:47:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8548:19:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8559:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8564:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8555:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8555:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8548:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a7631ce4b1d67ab2ea2e3a99864ad2ef66eaa23be33f43d861743cc997b52b6d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8385:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8393:3:40",
                "type": ""
              }
            ],
            "src": "8251:322:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8725:224:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8735:74:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8801:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8806:2:40",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8742:58:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8742:67:40"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8735:3:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8830:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8835:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8826:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8826:11:40"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8839:34:40",
                        "type": "",
                        "value": "Current proposal has not been ex"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8819:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8819:55:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8819:55:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8895:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8900:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8891:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8891:12:40"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8905:8:40",
                        "type": "",
                        "value": "ecuted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8884:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8884:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8884:30:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8924:19:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8935:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8940:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8931:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8931:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8924:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a9d4a1a1f8ea8c67a10cb82cd451dac7c75d124426d7a37aed61b7b36fe04a84_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8713:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8721:3:40",
                "type": ""
              }
            ],
            "src": "8579:370:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9101:170:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9111:74:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9177:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9182:2:40",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9118:58:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9118:67:40"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9111:3:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9206:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9211:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9202:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9202:11:40"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9215:20:40",
                        "type": "",
                        "value": "Index out of range"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9195:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9195:41:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9195:41:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9246:19:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9257:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9262:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9253:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9253:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9246:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c9580fd05844cb84bf0a747c48ec42a21f1dca0bc044d3619707fb319eddae0d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9089:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9097:3:40",
                "type": ""
              }
            ],
            "src": "8955:316:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9423:168:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9433:74:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9499:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9504:2:40",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9440:58:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9440:67:40"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9433:3:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9528:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9533:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9524:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9524:11:40"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9537:18:40",
                        "type": "",
                        "value": "Voting is closed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9517:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9517:39:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9517:39:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9566:19:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9577:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9582:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9573:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9573:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9566:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ee7290904f8766469ab01017a93a06f58efe604018332076bd6b66c54b4d1379_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9411:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9419:3:40",
                "type": ""
              }
            ],
            "src": "9277:314:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9769:1741:40",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9779:28:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9795:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9800:6:40",
                        "type": "",
                        "value": "0x0120"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9791:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9791:16:40"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "9783:4:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9817:235:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9852:43:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9882:5:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9889:4:40",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9878:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9878:16:40"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9872:5:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9872:23:40"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "9856:12:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9920:3:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9925:4:40",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9916:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9916:14:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "9936:4:40"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9942:3:40"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "9932:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9932:14:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9909:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9909:38:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9909:38:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9960:81:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "10022:12:40"
                          },
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10036:4:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "9968:53:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9968:73:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "9960:4:40"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10062:165:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10098:43:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10128:5:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10135:4:40",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10124:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10124:16:40"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "10118:5:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10118:23:40"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "10102:12:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "10188:12:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10206:3:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10211:4:40",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10202:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10202:14:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "10154:33:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10154:63:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10154:63:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10237:163:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10271:43:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10301:5:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10308:4:40",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10297:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10297:16:40"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "10291:5:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10291:23:40"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "10275:12:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "10361:12:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10379:3:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10384:4:40",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10375:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10375:14:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "10327:33:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10327:63:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10327:63:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10410:185:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10453:43:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10483:5:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10490:4:40",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10479:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10479:16:40"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "10473:5:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10473:23:40"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "10457:12:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "10556:12:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10574:3:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10579:4:40",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10570:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10570:14:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_enum$_ProposalType_$10_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "10509:46:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10509:76:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10509:76:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10605:165:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10643:43:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10673:5:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10680:4:40",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10669:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10669:16:40"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "10663:5:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10663:23:40"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "10647:12:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "10731:12:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10749:3:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10754:4:40",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10745:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10745:14:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint64_to_t_uint64",
                          "nodeType": "YulIdentifier",
                          "src": "10699:31:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10699:61:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10699:61:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10780:167:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10820:43:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10850:5:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10857:4:40",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10846:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10846:16:40"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "10840:5:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10840:23:40"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "10824:12:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "10908:12:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10926:3:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10931:4:40",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10922:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10922:14:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint64_to_t_uint64",
                          "nodeType": "YulIdentifier",
                          "src": "10876:31:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10876:61:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10876:61:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10957:162:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10996:43:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11026:5:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11033:4:40",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11022:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11022:16:40"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "11016:5:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11016:23:40"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "11000:12:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "11080:12:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11098:3:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11103:4:40",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11094:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11094:14:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bool_to_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "11052:27:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11052:57:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11052:57:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "11129:175:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11175:43:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11205:5:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11212:4:40",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11201:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11201:16:40"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "11195:5:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11195:23:40"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "11179:12:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "11265:12:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11283:3:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11288:4:40",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11279:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11279:14:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "11231:33:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11231:63:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11231:63:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "11314:169:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11350:45:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11380:5:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11387:6:40",
                                "type": "",
                                "value": "0x0100"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11376:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11376:18:40"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "11370:5:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11370:25:40"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "11354:12:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "11442:12:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11460:3:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11465:6:40",
                                "type": "",
                                "value": "0x0100"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11456:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11456:16:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "11408:33:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11408:65:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11408:65:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11493:11:40",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "11500:4:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11493:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_Proposal_$30_memory_ptr_to_t_struct$_Proposal_$30_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9748:5:40",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9755:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9764:3:40",
                "type": ""
              }
            ],
            "src": "9647:1863:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11571:53:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11588:3:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11611:5:40"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "11593:17:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11593:24:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11581:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11581:37:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11581:37:40"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11559:5:40",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11566:3:40",
                "type": ""
              }
            ],
            "src": "11516:108:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11693:52:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11710:3:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11732:5:40"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint32",
                          "nodeType": "YulIdentifier",
                          "src": "11715:16:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11715:23:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11703:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11703:36:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11703:36:40"
                }
              ]
            },
            "name": "abi_encode_t_uint32_to_t_uint32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11681:5:40",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11688:3:40",
                "type": ""
              }
            ],
            "src": "11630:115:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11804:52:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11821:3:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11843:5:40"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint64",
                          "nodeType": "YulIdentifier",
                          "src": "11826:16:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11826:23:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11814:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11814:36:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11814:36:40"
                }
              ]
            },
            "name": "abi_encode_t_uint64_to_t_uint64",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11792:5:40",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11799:3:40",
                "type": ""
              }
            ],
            "src": "11751:105:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11960:124:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11970:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11982:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11993:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11978:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11978:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11970:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12050:6:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12063:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12074:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12059:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12059:17:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12006:43:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12006:71:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12006:71:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11932:9:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11944:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11955:4:40",
                "type": ""
              }
            ],
            "src": "11862:222:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12261:248:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12271:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12283:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12294:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12279:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12279:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12271:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12318:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12329:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12314:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12314:17:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12337:4:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12343:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12333:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12333:20:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12307:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12307:47:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12307:47:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12363:139:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12497:4:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_021bbc0d0cd3b18cd09c04eb2ee2bea6559b9c286ce3e8b0e320c330e50d21c4_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12371:124:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12371:131:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12363:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_021bbc0d0cd3b18cd09c04eb2ee2bea6559b9c286ce3e8b0e320c330e50d21c4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12241:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12256:4:40",
                "type": ""
              }
            ],
            "src": "12090:419:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12686:248:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12696:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12708:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12719:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12704:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12704:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12696:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12743:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12754:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12739:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12739:17:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12762:4:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12768:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12758:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12758:20:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12732:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12732:47:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12732:47:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12788:139:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12922:4:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_065e43b5ef1d4e76d7edd0fbe0a29f349b29104487f97e8b32ca1643b06c678e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12796:124:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12796:131:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12788:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_065e43b5ef1d4e76d7edd0fbe0a29f349b29104487f97e8b32ca1643b06c678e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12666:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12681:4:40",
                "type": ""
              }
            ],
            "src": "12515:419:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13111:248:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13121:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13133:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13144:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13129:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13129:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13121:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13168:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13179:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13164:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13164:17:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13187:4:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13193:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13183:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13183:20:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13157:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13157:47:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13157:47:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13213:139:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13347:4:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13221:124:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13221:131:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13213:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13091:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13106:4:40",
                "type": ""
              }
            ],
            "src": "12940:419:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13536:248:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13546:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13558:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13569:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13554:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13554:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13546:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13593:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13604:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13589:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13589:17:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13612:4:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13618:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13608:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13608:20:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13582:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13582:47:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13582:47:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13638:139:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13772:4:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4bd03e1a30494a055957512ea8d56151bd2a1a9090f409d257d985dbb793b2b6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13646:124:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13646:131:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13638:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4bd03e1a30494a055957512ea8d56151bd2a1a9090f409d257d985dbb793b2b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13516:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13531:4:40",
                "type": ""
              }
            ],
            "src": "13365:419:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13961:248:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13971:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13983:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13994:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13979:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13979:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13971:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14018:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14029:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14014:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14014:17:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14037:4:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14043:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14033:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14033:20:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14007:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14007:47:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14007:47:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14063:139:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14197:4:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14071:124:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14071:131:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14063:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13941:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13956:4:40",
                "type": ""
              }
            ],
            "src": "13790:419:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14386:248:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14396:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14408:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14419:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14404:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14404:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14396:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14443:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14454:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14439:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14439:17:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14462:4:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14468:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14458:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14458:20:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14432:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14432:47:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14432:47:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14488:139:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14622:4:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_5b54396c962020cdeb47afea5d4fe26f8a3f301ae583ed844e999bb77ee3a0b8_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14496:124:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14496:131:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14488:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5b54396c962020cdeb47afea5d4fe26f8a3f301ae583ed844e999bb77ee3a0b8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14366:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14381:4:40",
                "type": ""
              }
            ],
            "src": "14215:419:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14811:248:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14821:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14833:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14844:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14829:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14829:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14821:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14868:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14879:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14864:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14864:17:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14887:4:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14893:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14883:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14883:20:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14857:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14857:47:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14857:47:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14913:139:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15047:4:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6478cb6d77054c533019506f690616008a73b4d8a8e6ce0e838c9006bc9d3c9f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14921:124:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14921:131:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14913:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6478cb6d77054c533019506f690616008a73b4d8a8e6ce0e838c9006bc9d3c9f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14791:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14806:4:40",
                "type": ""
              }
            ],
            "src": "14640:419:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15236:248:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15246:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15258:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15269:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15254:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15254:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15246:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15293:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15304:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15289:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15289:17:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15312:4:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15318:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15308:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15308:20:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15282:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15282:47:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15282:47:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15338:139:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15472:4:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6c2018ab3281d5f803db36d5c7db0892a89e978895e4947aa99e1a29a222dff3_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15346:124:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15346:131:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15338:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6c2018ab3281d5f803db36d5c7db0892a89e978895e4947aa99e1a29a222dff3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15216:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15231:4:40",
                "type": ""
              }
            ],
            "src": "15065:419:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15661:248:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15671:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15683:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15694:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15679:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15679:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15671:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15718:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15729:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15714:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15714:17:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15737:4:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15743:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15733:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15733:20:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15707:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15707:47:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15707:47:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15763:139:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15897:4:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8f1cb6ae5f8d388ca758957909026d881ea8885e3881caba255c4110406af0ed_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15771:124:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15771:131:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15763:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8f1cb6ae5f8d388ca758957909026d881ea8885e3881caba255c4110406af0ed__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15641:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15656:4:40",
                "type": ""
              }
            ],
            "src": "15490:419:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16086:248:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16096:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16108:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16119:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16104:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16104:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16096:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16143:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16154:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16139:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16139:17:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "16162:4:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16168:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16158:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16158:20:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16132:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16132:47:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16132:47:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16188:139:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "16322:4:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16196:124:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16196:131:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16188:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16066:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16081:4:40",
                "type": ""
              }
            ],
            "src": "15915:419:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16511:248:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16521:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16533:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16544:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16529:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16529:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16521:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16568:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16579:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16564:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16564:17:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "16587:4:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16593:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16583:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16583:20:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16557:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16557:47:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16557:47:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16613:139:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "16747:4:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a7631ce4b1d67ab2ea2e3a99864ad2ef66eaa23be33f43d861743cc997b52b6d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16621:124:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16621:131:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16613:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a7631ce4b1d67ab2ea2e3a99864ad2ef66eaa23be33f43d861743cc997b52b6d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16491:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16506:4:40",
                "type": ""
              }
            ],
            "src": "16340:419:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16936:248:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16946:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16958:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16969:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16954:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16954:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16946:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16993:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17004:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16989:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16989:17:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17012:4:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17018:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17008:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17008:20:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16982:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16982:47:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16982:47:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17038:139:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17172:4:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a9d4a1a1f8ea8c67a10cb82cd451dac7c75d124426d7a37aed61b7b36fe04a84_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17046:124:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17046:131:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17038:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a9d4a1a1f8ea8c67a10cb82cd451dac7c75d124426d7a37aed61b7b36fe04a84__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16916:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16931:4:40",
                "type": ""
              }
            ],
            "src": "16765:419:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17361:248:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17371:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17383:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17394:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17379:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17379:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17371:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17418:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17429:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17414:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17414:17:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17437:4:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17443:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17433:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17433:20:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17407:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17407:47:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17407:47:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17463:139:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17597:4:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c9580fd05844cb84bf0a747c48ec42a21f1dca0bc044d3619707fb319eddae0d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17471:124:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17471:131:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17463:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c9580fd05844cb84bf0a747c48ec42a21f1dca0bc044d3619707fb319eddae0d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17341:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17356:4:40",
                "type": ""
              }
            ],
            "src": "17190:419:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17786:248:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17796:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17808:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17819:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17804:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17804:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17796:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17843:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17854:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17839:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17839:17:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17862:4:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17868:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17858:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17858:20:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17832:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17832:47:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17832:47:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17888:139:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18022:4:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ee7290904f8766469ab01017a93a06f58efe604018332076bd6b66c54b4d1379_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17896:124:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17896:131:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17888:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ee7290904f8766469ab01017a93a06f58efe604018332076bd6b66c54b4d1379__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17766:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17781:4:40",
                "type": ""
              }
            ],
            "src": "17615:419:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18186:223:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18196:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18208:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18219:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18204:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18204:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18196:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18243:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18254:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18239:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18239:17:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "18262:4:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18268:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18258:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18258:20:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18232:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18232:47:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18232:47:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18288:114:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18388:6:40"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18397:4:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_Proposal_$30_memory_ptr_to_t_struct$_Proposal_$30_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18296:91:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18296:106:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18288:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Proposal_$30_memory_ptr__to_t_struct$_Proposal_$30_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18158:9:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18170:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18181:4:40",
                "type": ""
              }
            ],
            "src": "18040:369:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18511:122:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18521:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18533:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18544:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18529:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18529:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18521:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18599:6:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18612:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18623:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18608:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18608:17:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint32_to_t_uint32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18557:41:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18557:69:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18557:69:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18483:9:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18495:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18506:4:40",
                "type": ""
              }
            ],
            "src": "18415:218:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18679:243:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18689:19:40",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18705:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "18699:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18699:9:40"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "18689:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18717:35:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "18739:6:40"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "18747:4:40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18735:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18735:17:40"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "18721:10:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18863:22:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "18865:16:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18865:18:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18865:18:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "18806:10:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18818:18:40",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "18803:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18803:34:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "18842:10:40"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18854:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "18839:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18839:22:40"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "18800:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18800:62:40"
                  },
                  "nodeType": "YulIf",
                  "src": "18797:2:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18901:2:40",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "18905:10:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18894:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18894:22:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18894:22:40"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "18663:4:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "18672:6:40",
                "type": ""
              }
            ],
            "src": "18639:283:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18995:265:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19100:22:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "19102:16:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19102:18:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19102:18:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "19072:6:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19080:18:40",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "19069:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19069:30:40"
                  },
                  "nodeType": "YulIf",
                  "src": "19066:2:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19152:41:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "19168:6:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19176:4:40",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19164:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19164:17:40"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19187:4:40",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "19183:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19183:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "19160:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19160:33:40"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "19152:4:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19230:23:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "19242:4:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19248:4:40",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19238:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19238:15:40"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "19230:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "18979:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "18990:4:40",
                "type": ""
              }
            ],
            "src": "18928:332:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19325:40:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19336:22:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "19352:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19346:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19346:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "19336:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19308:5:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "19318:6:40",
                "type": ""
              }
            ],
            "src": "19266:99:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19457:73:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19474:3:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "19479:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19467:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19467:19:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19467:19:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19495:29:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19514:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19519:4:40",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19510:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19510:14:40"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "19495:11:40"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "19429:3:40",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "19434:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "19445:11:40",
                "type": ""
              }
            ],
            "src": "19371:159:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19632:73:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19649:3:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "19654:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19642:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19642:19:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19642:19:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19670:29:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19689:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19694:4:40",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19685:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19685:14:40"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "19670:11:40"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "19604:3:40",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "19609:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "19620:11:40",
                "type": ""
              }
            ],
            "src": "19536:169:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19754:211:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19764:24:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19786:1:40"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint64",
                      "nodeType": "YulIdentifier",
                      "src": "19769:16:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19769:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "19764:1:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19797:24:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19819:1:40"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint64",
                      "nodeType": "YulIdentifier",
                      "src": "19802:16:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19802:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "19797:1:40"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19911:22:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "19913:16:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19913:18:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19913:18:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19880:1:40"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19887:18:40",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "19907:1:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19883:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19883:26:40"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "19877:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19877:33:40"
                  },
                  "nodeType": "YulIf",
                  "src": "19874:2:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19943:16:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19954:1:40"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19957:1:40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19950:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19950:9:40"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "19943:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint64",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "19741:1:40",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "19744:1:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "19750:3:40",
                "type": ""
              }
            ],
            "src": "19711:254:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20012:141:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20022:24:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20044:1:40"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint64",
                      "nodeType": "YulIdentifier",
                      "src": "20027:16:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20027:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "20022:1:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20055:24:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20077:1:40"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint64",
                      "nodeType": "YulIdentifier",
                      "src": "20060:16:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20060:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "20055:1:40"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20101:22:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "20103:16:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20103:18:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20103:18:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20098:1:40"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "20091:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20091:9:40"
                  },
                  "nodeType": "YulIf",
                  "src": "20088:2:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20133:14:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20142:1:40"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20145:1:40"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "20138:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20138:9:40"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "20133:1:40"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint64",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "20001:1:40",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "20004:1:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "20010:1:40",
                "type": ""
              }
            ],
            "src": "19971:182:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20206:250:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20216:24:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20238:1:40"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint64",
                      "nodeType": "YulIdentifier",
                      "src": "20221:16:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20221:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "20216:1:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20249:24:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20271:1:40"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint64",
                      "nodeType": "YulIdentifier",
                      "src": "20254:16:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20254:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "20249:1:40"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20398:22:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "20400:16:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20400:18:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20400:18:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "20358:1:40"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "20351:6:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20351:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "20344:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20344:17:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "20366:1:40"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20373:18:40",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "20393:1:40"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "20369:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20369:26:40"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "20363:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20363:33:40"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "20340:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20340:57:40"
                  },
                  "nodeType": "YulIf",
                  "src": "20337:2:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20430:20:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20445:1:40"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20448:1:40"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "20441:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20441:9:40"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "20430:7:40"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint64",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "20189:1:40",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "20192:1:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "20198:7:40",
                "type": ""
              }
            ],
            "src": "20159:297:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20507:51:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20517:35:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "20546:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "20528:17:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20528:24:40"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "20517:7:40"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20489:5:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "20499:7:40",
                "type": ""
              }
            ],
            "src": "20462:96:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20606:48:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20616:32:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "20641:5:40"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "20634:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20634:13:40"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "20627:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20627:21:40"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "20616:7:40"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20588:5:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "20598:7:40",
                "type": ""
              }
            ],
            "src": "20564:90:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20720:81:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20730:16:40",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "20741:5:40"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "20730:7:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "20789:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_ProposalType_$10",
                      "nodeType": "YulIdentifier",
                      "src": "20747:41:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20747:48:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20747:48:40"
                }
              ]
            },
            "name": "cleanup_t_enum$_ProposalType_$10",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20702:5:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "20712:7:40",
                "type": ""
              }
            ],
            "src": "20660:141:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20852:81:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20862:65:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "20877:5:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20884:42:40",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "20873:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20873:54:40"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "20862:7:40"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20834:5:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "20844:7:40",
                "type": ""
              }
            ],
            "src": "20807:126:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20984:32:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20994:16:40",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "21005:5:40"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "20994:7:40"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20966:5:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "20976:7:40",
                "type": ""
              }
            ],
            "src": "20939:77:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21066:49:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21076:33:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "21091:5:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21098:10:40",
                        "type": "",
                        "value": "0xffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "21087:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21087:22:40"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "21076:7:40"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21048:5:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "21058:7:40",
                "type": ""
              }
            ],
            "src": "21022:93:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21165:57:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21175:41:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "21190:5:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21197:18:40",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "21186:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21186:30:40"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "21175:7:40"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint64",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21147:5:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "21157:7:40",
                "type": ""
              }
            ],
            "src": "21121:101:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21301:68:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21311:52:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "21357:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_ProposalType_$10",
                      "nodeType": "YulIdentifier",
                      "src": "21324:32:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21324:39:40"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "21311:9:40"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_ProposalType_$10_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21281:5:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "21291:9:40",
                "type": ""
              }
            ],
            "src": "21228:141:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21426:103:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "21449:3:40"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "21454:3:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21459:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "21436:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21436:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21436:30:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "21507:3:40"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "21512:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21503:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21503:16:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21521:1:40",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21496:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21496:27:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21496:27:40"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "21408:3:40",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "21413:3:40",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "21418:6:40",
                "type": ""
              }
            ],
            "src": "21375:154:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21584:258:40",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21594:10:40",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "21603:1:40",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "21598:1:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21663:63:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "21688:3:40"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "21693:1:40"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "21684:3:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "21684:11:40"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "21707:3:40"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "21712:1:40"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "21703:3:40"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "21703:11:40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "21697:5:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "21697:18:40"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "21677:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21677:39:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21677:39:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "21624:1:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21627:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "21621:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21621:13:40"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "21635:19:40",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "21637:15:40",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "21646:1:40"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21649:2:40",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "21642:3:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21642:10:40"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "21637:1:40"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "21617:3:40",
                    "statements": []
                  },
                  "src": "21613:113:40"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21760:76:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "21810:3:40"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "21815:6:40"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "21806:3:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "21806:16:40"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21824:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "21799:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21799:27:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21799:27:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "21741:1:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21744:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "21738:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21738:13:40"
                  },
                  "nodeType": "YulIf",
                  "src": "21735:2:40"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "21566:3:40",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "21571:3:40",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "21576:6:40",
                "type": ""
              }
            ],
            "src": "21535:307:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21899:269:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21909:22:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "21923:4:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21929:1:40",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "21919:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21919:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "21909:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21940:38:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "21970:4:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21976:1:40",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "21966:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21966:12:40"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "21944:18:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22017:51:40",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "22031:27:40",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "22045:6:40"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22053:4:40",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "22041:3:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22041:17:40"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "22031:6:40"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "21997:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "21990:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21990:26:40"
                  },
                  "nodeType": "YulIf",
                  "src": "21987:2:40"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22120:42:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "22134:16:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22134:18:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22134:18:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "22084:18:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "22107:6:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22115:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "22104:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22104:14:40"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "22081:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22081:38:40"
                  },
                  "nodeType": "YulIf",
                  "src": "22078:2:40"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "21883:4:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "21892:6:40",
                "type": ""
              }
            ],
            "src": "21848:320:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22216:133:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22226:32:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "22252:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint32",
                      "nodeType": "YulIdentifier",
                      "src": "22235:16:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22235:23:40"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "22226:5:40"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22292:22:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "22294:16:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22294:18:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22294:18:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "22273:5:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22280:10:40",
                        "type": "",
                        "value": "0xffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "22270:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22270:21:40"
                  },
                  "nodeType": "YulIf",
                  "src": "22267:2:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22323:20:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "22334:5:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22341:1:40",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22330:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22330:13:40"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "22323:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "22202:5:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "22212:3:40",
                "type": ""
              }
            ],
            "src": "22174:175:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22383:152:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22400:1:40",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22403:77:40",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22393:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22393:88:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22393:88:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22497:1:40",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22500:4:40",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22490:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22490:15:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22490:15:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22521:1:40",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22524:4:40",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "22514:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22514:15:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22514:15:40"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "22355:180:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22569:152:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22586:1:40",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22589:77:40",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22579:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22579:88:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22579:88:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22683:1:40",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22686:4:40",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22676:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22676:15:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22676:15:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22707:1:40",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22710:4:40",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "22700:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22700:15:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22700:15:40"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "22541:180:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22755:152:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22772:1:40",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22775:77:40",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22765:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22765:88:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22765:88:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22869:1:40",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22872:4:40",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22862:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22862:15:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22862:15:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22893:1:40",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22896:4:40",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "22886:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22886:15:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22886:15:40"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "22727:180:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22941:152:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22958:1:40",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22961:77:40",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22951:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22951:88:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22951:88:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23055:1:40",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23058:4:40",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23048:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23048:15:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23048:15:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23079:1:40",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23082:4:40",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "23072:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23072:15:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23072:15:40"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "22913:180:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23127:152:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23144:1:40",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23147:77:40",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23137:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23137:88:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23137:88:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23241:1:40",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23244:4:40",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23234:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23234:15:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23234:15:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23265:1:40",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23268:4:40",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "23258:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23258:15:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23258:15:40"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "23099:180:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23333:54:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23343:38:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "23361:5:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23368:2:40",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23357:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23357:14:40"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23377:2:40",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "23373:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23373:7:40"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "23353:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23353:28:40"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "23343:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "23316:5:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "23326:6:40",
                "type": ""
              }
            ],
            "src": "23285:102:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23451:62:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "23485:22:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "23487:16:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23487:18:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23487:18:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "23474:5:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23481:1:40",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "23471:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23471:12:40"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "23464:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23464:20:40"
                  },
                  "nodeType": "YulIf",
                  "src": "23461:2:40"
                }
              ]
            },
            "name": "validator_assert_t_enum$_ProposalType_$10",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "23444:5:40",
                "type": ""
              }
            ],
            "src": "23393:120:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23562:79:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "23619:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23628:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23631:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "23621:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23621:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23621:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "23585:5:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "23610:5:40"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "23592:17:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23592:24:40"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "23582:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23582:35:40"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "23575:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23575:43:40"
                  },
                  "nodeType": "YulIf",
                  "src": "23572:2:40"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "23555:5:40",
                "type": ""
              }
            ],
            "src": "23519:122:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23687:76:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "23741:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23750:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23753:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "23743:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23743:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23743:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "23710:5:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "23732:5:40"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "23717:14:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23717:21:40"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "23707:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23707:32:40"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "23700:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23700:40:40"
                  },
                  "nodeType": "YulIf",
                  "src": "23697:2:40"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "23680:5:40",
                "type": ""
              }
            ],
            "src": "23647:116:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23812:79:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "23869:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23878:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23881:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "23871:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23871:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23871:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "23835:5:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "23860:5:40"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "23842:17:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23842:24:40"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "23832:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23832:35:40"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "23825:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23825:43:40"
                  },
                  "nodeType": "YulIf",
                  "src": "23822:2:40"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "23805:5:40",
                "type": ""
              }
            ],
            "src": "23769:122:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23939:78:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "23995:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "24004:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "24007:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "23997:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23997:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23997:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "23962:5:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "23986:5:40"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint32",
                              "nodeType": "YulIdentifier",
                              "src": "23969:16:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23969:23:40"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "23959:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23959:34:40"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "23952:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23952:42:40"
                  },
                  "nodeType": "YulIf",
                  "src": "23949:2:40"
                }
              ]
            },
            "name": "validator_revert_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "23932:5:40",
                "type": ""
              }
            ],
            "src": "23897:120:40"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint32t_uint32(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint32t_uint32t_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_enum$_ProposalType_$10_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_ProposalType_$10_to_t_uint8(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_021bbc0d0cd3b18cd09c04eb2ee2bea6559b9c286ce3e8b0e320c330e50d21c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n\n        mstore(add(pos, 0), \"End of proposal needs be after s\")\n\n        mstore(add(pos, 32), \"tart\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_065e43b5ef1d4e76d7edd0fbe0a29f349b29104487f97e8b32ca1643b06c678e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n\n        mstore(add(pos, 0), \"Current proposal needs to end be\")\n\n        mstore(add(pos, 32), \"fore a new one can be created\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_4bd03e1a30494a055957512ea8d56151bd2a1a9090f409d257d985dbb793b2b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n\n        mstore(add(pos, 0), \"Voting is not open\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n\n        mstore(add(pos, 0), \"Already voted\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_5b54396c962020cdeb47afea5d4fe26f8a3f301ae583ed844e999bb77ee3a0b8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n\n        mstore(add(pos, 0), \"Proposal needs to be in the futu\")\n\n        mstore(add(pos, 32), \"re\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6478cb6d77054c533019506f690616008a73b4d8a8e6ce0e838c9006bc9d3c9f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n\n        mstore(add(pos, 0), \"Not enough tokens for vorting ri\")\n\n        mstore(add(pos, 32), \"ghts\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6c2018ab3281d5f803db36d5c7db0892a89e978895e4947aa99e1a29a222dff3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n\n        mstore(add(pos, 0), \"Proposal has already been execut\")\n\n        mstore(add(pos, 32), \"ed\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8f1cb6ae5f8d388ca758957909026d881ea8885e3881caba255c4110406af0ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n\n        mstore(add(pos, 0), \"Taxes address is the zero addres\")\n\n        mstore(add(pos, 32), \"s\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a7631ce4b1d67ab2ea2e3a99864ad2ef66eaa23be33f43d861743cc997b52b6d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n\n        mstore(add(pos, 0), \"Proposal hasnt ended yet\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a9d4a1a1f8ea8c67a10cb82cd451dac7c75d124426d7a37aed61b7b36fe04a84_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Current proposal has not been ex\")\n\n        mstore(add(pos, 32), \"ecuted\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c9580fd05844cb84bf0a747c48ec42a21f1dca0bc044d3619707fb319eddae0d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n\n        mstore(add(pos, 0), \"Index out of range\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ee7290904f8766469ab01017a93a06f58efe604018332076bd6b66c54b4d1379_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n\n        mstore(add(pos, 0), \"Voting is closed\")\n\n        end := add(pos, 32)\n    }\n\n    // struct GOV.Proposal -> struct GOV.Proposal\n    function abi_encode_t_struct$_Proposal_$30_memory_ptr_to_t_struct$_Proposal_$30_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x0120)\n\n        {\n            // name\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // start\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // end\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // proposalType\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_enum$_ProposalType_$10_to_t_uint8(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // upvotes\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint64_to_t_uint64(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // downvotes\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint64_to_t_uint64(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // executed\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // addressToChange\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // value\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0100))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint64(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_021bbc0d0cd3b18cd09c04eb2ee2bea6559b9c286ce3e8b0e320c330e50d21c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_021bbc0d0cd3b18cd09c04eb2ee2bea6559b9c286ce3e8b0e320c330e50d21c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_065e43b5ef1d4e76d7edd0fbe0a29f349b29104487f97e8b32ca1643b06c678e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_065e43b5ef1d4e76d7edd0fbe0a29f349b29104487f97e8b32ca1643b06c678e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4bd03e1a30494a055957512ea8d56151bd2a1a9090f409d257d985dbb793b2b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4bd03e1a30494a055957512ea8d56151bd2a1a9090f409d257d985dbb793b2b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5b54396c962020cdeb47afea5d4fe26f8a3f301ae583ed844e999bb77ee3a0b8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5b54396c962020cdeb47afea5d4fe26f8a3f301ae583ed844e999bb77ee3a0b8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6478cb6d77054c533019506f690616008a73b4d8a8e6ce0e838c9006bc9d3c9f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6478cb6d77054c533019506f690616008a73b4d8a8e6ce0e838c9006bc9d3c9f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6c2018ab3281d5f803db36d5c7db0892a89e978895e4947aa99e1a29a222dff3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6c2018ab3281d5f803db36d5c7db0892a89e978895e4947aa99e1a29a222dff3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8f1cb6ae5f8d388ca758957909026d881ea8885e3881caba255c4110406af0ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8f1cb6ae5f8d388ca758957909026d881ea8885e3881caba255c4110406af0ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a7631ce4b1d67ab2ea2e3a99864ad2ef66eaa23be33f43d861743cc997b52b6d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a7631ce4b1d67ab2ea2e3a99864ad2ef66eaa23be33f43d861743cc997b52b6d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a9d4a1a1f8ea8c67a10cb82cd451dac7c75d124426d7a37aed61b7b36fe04a84__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a9d4a1a1f8ea8c67a10cb82cd451dac7c75d124426d7a37aed61b7b36fe04a84_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c9580fd05844cb84bf0a747c48ec42a21f1dca0bc044d3619707fb319eddae0d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c9580fd05844cb84bf0a747c48ec42a21f1dca0bc044d3619707fb319eddae0d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ee7290904f8766469ab01017a93a06f58efe604018332076bd6b66c54b4d1379__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ee7290904f8766469ab01017a93a06f58efe604018332076bd6b66c54b4d1379_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_Proposal_$30_memory_ptr__to_t_struct$_Proposal_$30_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Proposal_$30_memory_ptr_to_t_struct$_Proposal_$30_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint64(x, y) -> sum {\n        x := cleanup_t_uint64(x)\n        y := cleanup_t_uint64(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint64(x, y) -> r {\n        x := cleanup_t_uint64(x)\n        y := cleanup_t_uint64(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint64(x, y) -> product {\n        x := cleanup_t_uint64(x)\n        y := cleanup_t_uint64(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_ProposalType_$10(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_ProposalType_$10(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_enum$_ProposalType_$10_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_ProposalType_$10(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function increment_t_uint32(value) -> ret {\n        value := cleanup_t_uint32(value)\n        if eq(value, 0xffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_assert_t_enum$_ProposalType_$10(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 40,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "190:3768:0:-:0;;;603:2;557:48;;;;;;;;;;;;;;;;;;;;685:15;650:50;;738:1;710:29;;;;;;;;;;;;;;;;;;;;190:3768;;;;;;;;;;867:17:27;887:12;:10;;;:12;;:::i;:::-;867:32;;918:9;909:6;;:18;;;;;;;;;;;;;;;;;;975:9;942:43;;971:1;942:43;;;;;;;;;;;;842:150;190:3768:0;;586:96:35;639:7;665:10;658:17;;586:96;:::o;190:3768:0:-;;;;;;;",
  "deployedSourceMap": "190:3768:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1417:901;;;:::i;:::-;;3147:184;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3019:116;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2330:677;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1700:145:27;;;:::i;:::-;;859:199:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1068:85:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;710:29:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1066:343;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1994:240:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1417:901:0;1291:12:27;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1520:15:0::1;1489:10;:23;1500:11;;;;;;;;;;;1489:23;;;;;;;;;;;;;;;:27;;;:46;;1481:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;1584:10;:23;1595:11;;;;;;;;;;;1584:23;;;;;;;;;;;;;;;:32;;;;;;;;;;;;1583:33;1575:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1711:18;1671:58;;;;;;;;;;;;;;;;:10;:23;1682:11;;;;;;;;;;;1671:23;;;;;;;;;;;;;;;:36;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;1668:643;;;1780:4;1745:10;:23;1756:11;;;;;;;;;;;1745:23;;;;;;;;;;;;;;;:32;;;:39;;;;;;;;;;;;;;;;;;1668:643;;;1854:31;1814:71:::0;::::1;;;;;;;;;;;;;;;:10;:23;1825:11;;;;;;;;;;;1814:23;;;;;;;;;;;;;;;:36;;;;;;;;;;;;:71;;;;;;;;;;;;;;;;;1811:500;;;1901:16;1999:10;:23;2010:11;;;;;;;;;;;1999:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;1963:10;:23;1974:11;;;;;;;;;;;1963:23;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:67;;;;:::i;:::-;1955:3;1921:10;:23;1932:11;;;;;;;;;;;1921:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;:37;;;;:::i;:::-;1920:111;;;;:::i;:::-;1901:130;;;;2075:28;;;;;;;;;;;2063:40;;:8;:40;2060:170;;2140:13;;;;;;;;;;;2123:50;;;2174:10;:23;2185:11;;;;;;;;;;;2174:23;;;;;;;;;;;;;;;:39;;;;;;;;;;;;2123:91;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2060:170;2295:4;2260:10;:23;2271:11;;;;;;;;;;;2260:23;;;;;;;;;;;;;;;:32;;;:39;;;;;;;;;;;;;;;;;;1811:500;;1668:643;1417:901::o:0;3147:184::-;3209:15;;:::i;:::-;3254:11;;;;;;;;;;;3245:20;;:5;:20;;;;3237:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;3306:10;:17;3317:5;3306:17;;;;;;;;;;;;;;;3299:24;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3147:184;;;:::o;3019:116::-;3069:15;;:::i;:::-;3104:10;:23;3115:11;;;;;;;;;;;3104:23;;;;;;;;;;;;;;;3097:30;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3019:116;:::o;2330:677::-;2420:15;2388:10;:23;2399:11;;;;;;;;;;;2388:23;;;;;;;;;;;;;;;:29;;;:47;2380:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2507:15;2477:10;:23;2488:11;;;;;;;;;;;2477:23;;;;;;;;;;;;;;;:27;;;:45;2469:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2611:16;;2571:13;;;;;;;;;;;2564:31;;;2596:10;2564:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;2556:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;2723:10;:23;2734:11;;;;;;;;;;;2723:23;;;;;;;;;;;;;;;:29;;;2697:11;:23;2709:10;2697:23;;;;;;;;;;;;;;;;:55;2689:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;2807:15;2781:11;:23;2793:10;2781:23;;;;;;;;;;;;;;;:41;;;;2846:11;2843:157;;;2908:1;2873:10;:23;2884:11;;;;;;;;;;;2873:23;;;;;;;;;;;;;;;:31;;;:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2843:157;;;2987:1;2950:10;:23;2961:11;;;;;;;;;;;2950:23;;;;;;;;;;;;;;;:33;;;:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2843:157;2330:677;:::o;1700:145:27:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1769:40;;1790:6;::::0;::::1;;;;;;;;1769:40;;;;;;;;;;;;1836:1;1819:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1700:145::o:0;859:199:0:-;1291:12:27;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;961:89:0::1;974:75;;;;;;;;983:4;974:75;;;;989:5;974:75;;;;;;996:3;974:75;;;;;;1001:18;974:75;;;;;;;;;;;;;;;;;;;;1021:1;974:75;;;;;;1024:1;974:75;;;;;;1028:5;974:75;;;;;;1043:1;974:75;;;;;;1047:1;974:75;;::::0;961:12:::1;:89::i;:::-;859:199:::0;;;:::o;1068:85:27:-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;710:29:0:-;;;;;;;;;;;;;:::o;1066:343::-;1291:12:27;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1226:1:0::1;1199:29;;:15;:29;;;;1191:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1294:107;1307:93;;;;;;;;1316:4;1307:93;;;;1322:5;1307:93;;;;;;1329:3;1307:93;;;;;;1334:31;1307:93:::0;::::1;;;;;;;;;;;;;;;;;;;1367:1;1307:93;;;;;;1370:1;1307:93;;;;;;1374:5;1307:93;;;;;;1381:15;1307:93;;;;;;1398:1;1307:93;;::::0;1294:12:::1;:107::i;:::-;1066:343:::0;;;;:::o;1994:240:27:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2102:1:::1;2082:22;;:8;:22;;;;2074:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2191:8;2162:38;;2183:6;::::0;::::1;;;;;;;;2162:38;;;;;;;;;;;;2219:8;2210:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1994:240:::0;:::o;586:96:35:-;639:7;665:10;658:17;;586:96;:::o;3339:616:0:-;3424:1;3410:11;;;;;;;;;;;:15;;;3407:263;;;3479:15;3449:10;:23;3460:11;;;;;;;;;;;3449:23;;;;;;;;;;;;;;;:27;;;:45;3441:119;;;;;;;;;;;;:::i;:::-;;;;;;;;;3583:10;:23;3594:11;;;;;;;;;;;3583:23;;;;;;;;;;;;;;;:32;;;;;;;;;;;;3575:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;3407:263;3715:15;3698:8;:14;;;:32;3690:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;3805:8;:12;;;3788:8;:14;;;:29;3780:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3889:11;;:13;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3939:8;3913:10;:23;3924:11;;;;;;;;;;;3913:23;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3339:616;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:344:40:-;;110:65;125:49;167:6;125:49;:::i;:::-;110:65;:::i;:::-;101:74;;198:6;191:5;184:21;236:4;229:5;225:16;274:3;265:6;260:3;256:16;253:25;250:2;;;291:1;288;281:12;250:2;304:41;338:6;333:3;328;304:41;:::i;:::-;91:260;;;;;;:::o;357:139::-;;441:6;428:20;419:29;;457:33;484:5;457:33;:::i;:::-;409:87;;;;:::o;502:133::-;;583:6;570:20;561:29;;599:30;623:5;599:30;:::i;:::-;551:84;;;;:::o;655:273::-;;760:3;753:4;745:6;741:17;737:27;727:2;;778:1;775;768:12;727:2;818:6;805:20;843:79;918:3;910:6;903:4;895:6;891:17;843:79;:::i;:::-;834:88;;717:211;;;;;:::o;934:143::-;;1022:6;1016:13;1007:22;;1038:33;1065:5;1038:33;:::i;:::-;997:80;;;;:::o;1083:137::-;;1166:6;1153:20;1144:29;;1182:32;1208:5;1182:32;:::i;:::-;1134:86;;;;:::o;1226:262::-;;1334:2;1322:9;1313:7;1309:23;1305:32;1302:2;;;1350:1;1347;1340:12;1302:2;1393:1;1418:53;1463:7;1454:6;1443:9;1439:22;1418:53;:::i;:::-;1408:63;;1364:117;1292:196;;;;:::o;1494:256::-;;1599:2;1587:9;1578:7;1574:23;1570:32;1567:2;;;1615:1;1612;1605:12;1567:2;1658:1;1683:50;1725:7;1716:6;1705:9;1701:22;1683:50;:::i;:::-;1673:60;;1629:114;1557:193;;;;:::o;1756:661::-;;;;1906:2;1894:9;1885:7;1881:23;1877:32;1874:2;;;1922:1;1919;1912:12;1874:2;1993:1;1982:9;1978:17;1965:31;2023:18;2015:6;2012:30;2009:2;;;2055:1;2052;2045:12;2009:2;2083:63;2138:7;2129:6;2118:9;2114:22;2083:63;:::i;:::-;2073:73;;1936:220;2195:2;2221:52;2265:7;2256:6;2245:9;2241:22;2221:52;:::i;:::-;2211:62;;2166:117;2322:2;2348:52;2392:7;2383:6;2372:9;2368:22;2348:52;:::i;:::-;2338:62;;2293:117;1864:553;;;;;:::o;2423:807::-;;;;;2590:3;2578:9;2569:7;2565:23;2561:33;2558:2;;;2607:1;2604;2597:12;2558:2;2678:1;2667:9;2663:17;2650:31;2708:18;2700:6;2697:30;2694:2;;;2740:1;2737;2730:12;2694:2;2768:63;2823:7;2814:6;2803:9;2799:22;2768:63;:::i;:::-;2758:73;;2621:220;2880:2;2906:52;2950:7;2941:6;2930:9;2926:22;2906:52;:::i;:::-;2896:62;;2851:117;3007:2;3033:52;3077:7;3068:6;3057:9;3053:22;3033:52;:::i;:::-;3023:62;;2978:117;3134:2;3160:53;3205:7;3196:6;3185:9;3181:22;3160:53;:::i;:::-;3150:63;;3105:118;2548:682;;;;;;;:::o;3236:284::-;;3355:2;3343:9;3334:7;3330:23;3326:32;3323:2;;;3371:1;3368;3361:12;3323:2;3414:1;3439:64;3495:7;3486:6;3475:9;3471:22;3439:64;:::i;:::-;3429:74;;3385:128;3313:207;;;;:::o;3526:260::-;;3633:2;3621:9;3612:7;3608:23;3604:32;3601:2;;;3649:1;3646;3639:12;3601:2;3692:1;3717:52;3761:7;3752:6;3741:9;3737:22;3717:52;:::i;:::-;3707:62;;3663:116;3591:195;;;;:::o;3792:108::-;3869:24;3887:5;3869:24;:::i;:::-;3864:3;3857:37;3847:53;;:::o;3906:118::-;3993:24;4011:5;3993:24;:::i;:::-;3988:3;3981:37;3971:53;;:::o;4030:99::-;4101:21;4116:5;4101:21;:::i;:::-;4096:3;4089:34;4079:50;;:::o;4135:147::-;4225:50;4269:5;4225:50;:::i;:::-;4220:3;4213:63;4203:79;;:::o;4288:344::-;;4394:39;4427:5;4394:39;:::i;:::-;4449:61;4503:6;4498:3;4449:61;:::i;:::-;4442:68;;4519:52;4564:6;4559:3;4552:4;4545:5;4541:16;4519:52;:::i;:::-;4596:29;4618:6;4596:29;:::i;:::-;4591:3;4587:39;4580:46;;4370:262;;;;;:::o;4638:368::-;;4801:67;4865:2;4860:3;4801:67;:::i;:::-;4794:74;;4898:34;4894:1;4889:3;4885:11;4878:55;4964:6;4959:2;4954:3;4950:12;4943:28;4997:2;4992:3;4988:12;4981:19;;4784:222;;;:::o;5012:393::-;;5175:67;5239:2;5234:3;5175:67;:::i;:::-;5168:74;;5272:34;5268:1;5263:3;5259:11;5252:55;5338:31;5333:2;5328:3;5324:12;5317:53;5396:2;5391:3;5387:12;5380:19;;5158:247;;;:::o;5411:370::-;;5574:67;5638:2;5633:3;5574:67;:::i;:::-;5567:74;;5671:34;5667:1;5662:3;5658:11;5651:55;5737:8;5732:2;5727:3;5723:12;5716:30;5772:2;5767:3;5763:12;5756:19;;5557:224;;;:::o;5787:316::-;;5950:67;6014:2;6009:3;5950:67;:::i;:::-;5943:74;;6047:20;6043:1;6038:3;6034:11;6027:41;6094:2;6089:3;6085:12;6078:19;;5933:170;;;:::o;6109:311::-;;6272:67;6336:2;6331:3;6272:67;:::i;:::-;6265:74;;6369:15;6365:1;6360:3;6356:11;6349:36;6411:2;6406:3;6402:12;6395:19;;6255:165;;;:::o;6426:366::-;;6589:67;6653:2;6648:3;6589:67;:::i;:::-;6582:74;;6686:34;6682:1;6677:3;6673:11;6666:55;6752:4;6747:2;6742:3;6738:12;6731:26;6783:2;6778:3;6774:12;6767:19;;6572:220;;;:::o;6798:368::-;;6961:67;7025:2;7020:3;6961:67;:::i;:::-;6954:74;;7058:34;7054:1;7049:3;7045:11;7038:55;7124:6;7119:2;7114:3;7110:12;7103:28;7157:2;7152:3;7148:12;7141:19;;6944:222;;;:::o;7172:366::-;;7335:67;7399:2;7394:3;7335:67;:::i;:::-;7328:74;;7432:34;7428:1;7423:3;7419:11;7412:55;7498:4;7493:2;7488:3;7484:12;7477:26;7529:2;7524:3;7520:12;7513:19;;7318:220;;;:::o;7544:365::-;;7707:67;7771:2;7766:3;7707:67;:::i;:::-;7700:74;;7804:34;7800:1;7795:3;7791:11;7784:55;7870:3;7865:2;7860:3;7856:12;7849:25;7900:2;7895:3;7891:12;7884:19;;7690:219;;;:::o;7915:330::-;;8078:67;8142:2;8137:3;8078:67;:::i;:::-;8071:74;;8175:34;8171:1;8166:3;8162:11;8155:55;8236:2;8231:3;8227:12;8220:19;;8061:184;;;:::o;8251:322::-;;8414:67;8478:2;8473:3;8414:67;:::i;:::-;8407:74;;8511:26;8507:1;8502:3;8498:11;8491:47;8564:2;8559:3;8555:12;8548:19;;8397:176;;;:::o;8579:370::-;;8742:67;8806:2;8801:3;8742:67;:::i;:::-;8735:74;;8839:34;8835:1;8830:3;8826:11;8819:55;8905:8;8900:2;8895:3;8891:12;8884:30;8940:2;8935:3;8931:12;8924:19;;8725:224;;;:::o;8955:316::-;;9118:67;9182:2;9177:3;9118:67;:::i;:::-;9111:74;;9215:20;9211:1;9206:3;9202:11;9195:41;9262:2;9257:3;9253:12;9246:19;;9101:170;;;:::o;9277:314::-;;9440:67;9504:2;9499:3;9440:67;:::i;:::-;9433:74;;9537:18;9533:1;9528:3;9524:11;9517:39;9582:2;9577:3;9573:12;9566:19;;9423:168;;;:::o;9647:1863::-;;9800:6;9795:3;9791:16;9889:4;9882:5;9878:16;9872:23;9942:3;9936:4;9932:14;9925:4;9920:3;9916:14;9909:38;9968:73;10036:4;10022:12;9968:73;:::i;:::-;9960:81;;9817:235;10135:4;10128:5;10124:16;10118:23;10154:63;10211:4;10206:3;10202:14;10188:12;10154:63;:::i;:::-;10062:165;10308:4;10301:5;10297:16;10291:23;10327:63;10384:4;10379:3;10375:14;10361:12;10327:63;:::i;:::-;10237:163;10490:4;10483:5;10479:16;10473:23;10509:76;10579:4;10574:3;10570:14;10556:12;10509:76;:::i;:::-;10410:185;10680:4;10673:5;10669:16;10663:23;10699:61;10754:4;10749:3;10745:14;10731:12;10699:61;:::i;:::-;10605:165;10857:4;10850:5;10846:16;10840:23;10876:61;10931:4;10926:3;10922:14;10908:12;10876:61;:::i;:::-;10780:167;11033:4;11026:5;11022:16;11016:23;11052:57;11103:4;11098:3;11094:14;11080:12;11052:57;:::i;:::-;10957:162;11212:4;11205:5;11201:16;11195:23;11231:63;11288:4;11283:3;11279:14;11265:12;11231:63;:::i;:::-;11129:175;11387:6;11380:5;11376:18;11370:25;11408:65;11465:6;11460:3;11456:16;11442:12;11408:65;:::i;:::-;11314:169;11500:4;11493:11;;9769:1741;;;;;:::o;11516:108::-;11593:24;11611:5;11593:24;:::i;:::-;11588:3;11581:37;11571:53;;:::o;11630:115::-;11715:23;11732:5;11715:23;:::i;:::-;11710:3;11703:36;11693:52;;:::o;11751:105::-;11826:23;11843:5;11826:23;:::i;:::-;11821:3;11814:36;11804:52;;:::o;11862:222::-;;11993:2;11982:9;11978:18;11970:26;;12006:71;12074:1;12063:9;12059:17;12050:6;12006:71;:::i;:::-;11960:124;;;;:::o;12090:419::-;;12294:2;12283:9;12279:18;12271:26;;12343:9;12337:4;12333:20;12329:1;12318:9;12314:17;12307:47;12371:131;12497:4;12371:131;:::i;:::-;12363:139;;12261:248;;;:::o;12515:419::-;;12719:2;12708:9;12704:18;12696:26;;12768:9;12762:4;12758:20;12754:1;12743:9;12739:17;12732:47;12796:131;12922:4;12796:131;:::i;:::-;12788:139;;12686:248;;;:::o;12940:419::-;;13144:2;13133:9;13129:18;13121:26;;13193:9;13187:4;13183:20;13179:1;13168:9;13164:17;13157:47;13221:131;13347:4;13221:131;:::i;:::-;13213:139;;13111:248;;;:::o;13365:419::-;;13569:2;13558:9;13554:18;13546:26;;13618:9;13612:4;13608:20;13604:1;13593:9;13589:17;13582:47;13646:131;13772:4;13646:131;:::i;:::-;13638:139;;13536:248;;;:::o;13790:419::-;;13994:2;13983:9;13979:18;13971:26;;14043:9;14037:4;14033:20;14029:1;14018:9;14014:17;14007:47;14071:131;14197:4;14071:131;:::i;:::-;14063:139;;13961:248;;;:::o;14215:419::-;;14419:2;14408:9;14404:18;14396:26;;14468:9;14462:4;14458:20;14454:1;14443:9;14439:17;14432:47;14496:131;14622:4;14496:131;:::i;:::-;14488:139;;14386:248;;;:::o;14640:419::-;;14844:2;14833:9;14829:18;14821:26;;14893:9;14887:4;14883:20;14879:1;14868:9;14864:17;14857:47;14921:131;15047:4;14921:131;:::i;:::-;14913:139;;14811:248;;;:::o;15065:419::-;;15269:2;15258:9;15254:18;15246:26;;15318:9;15312:4;15308:20;15304:1;15293:9;15289:17;15282:47;15346:131;15472:4;15346:131;:::i;:::-;15338:139;;15236:248;;;:::o;15490:419::-;;15694:2;15683:9;15679:18;15671:26;;15743:9;15737:4;15733:20;15729:1;15718:9;15714:17;15707:47;15771:131;15897:4;15771:131;:::i;:::-;15763:139;;15661:248;;;:::o;15915:419::-;;16119:2;16108:9;16104:18;16096:26;;16168:9;16162:4;16158:20;16154:1;16143:9;16139:17;16132:47;16196:131;16322:4;16196:131;:::i;:::-;16188:139;;16086:248;;;:::o;16340:419::-;;16544:2;16533:9;16529:18;16521:26;;16593:9;16587:4;16583:20;16579:1;16568:9;16564:17;16557:47;16621:131;16747:4;16621:131;:::i;:::-;16613:139;;16511:248;;;:::o;16765:419::-;;16969:2;16958:9;16954:18;16946:26;;17018:9;17012:4;17008:20;17004:1;16993:9;16989:17;16982:47;17046:131;17172:4;17046:131;:::i;:::-;17038:139;;16936:248;;;:::o;17190:419::-;;17394:2;17383:9;17379:18;17371:26;;17443:9;17437:4;17433:20;17429:1;17418:9;17414:17;17407:47;17471:131;17597:4;17471:131;:::i;:::-;17463:139;;17361:248;;;:::o;17615:419::-;;17819:2;17808:9;17804:18;17796:26;;17868:9;17862:4;17858:20;17854:1;17843:9;17839:17;17832:47;17896:131;18022:4;17896:131;:::i;:::-;17888:139;;17786:248;;;:::o;18040:369::-;;18219:2;18208:9;18204:18;18196:26;;18268:9;18262:4;18258:20;18254:1;18243:9;18239:17;18232:47;18296:106;18397:4;18388:6;18296:106;:::i;:::-;18288:114;;18186:223;;;;:::o;18415:218::-;;18544:2;18533:9;18529:18;18521:26;;18557:69;18623:1;18612:9;18608:17;18599:6;18557:69;:::i;:::-;18511:122;;;;:::o;18639:283::-;;18705:2;18699:9;18689:19;;18747:4;18739:6;18735:17;18854:6;18842:10;18839:22;18818:18;18806:10;18803:34;18800:62;18797:2;;;18865:18;;:::i;:::-;18797:2;18905:10;18901:2;18894:22;18679:243;;;;:::o;18928:332::-;;19080:18;19072:6;19069:30;19066:2;;;19102:18;;:::i;:::-;19066:2;19187:4;19183:9;19176:4;19168:6;19164:17;19160:33;19152:41;;19248:4;19242;19238:15;19230:23;;18995:265;;;:::o;19266:99::-;;19352:5;19346:12;19336:22;;19325:40;;;:::o;19371:159::-;;19479:6;19474:3;19467:19;19519:4;19514:3;19510:14;19495:29;;19457:73;;;;:::o;19536:169::-;;19654:6;19649:3;19642:19;19694:4;19689:3;19685:14;19670:29;;19632:73;;;;:::o;19711:254::-;;19769:19;19786:1;19769:19;:::i;:::-;19764:24;;19802:19;19819:1;19802:19;:::i;:::-;19797:24;;19907:1;19887:18;19883:26;19880:1;19877:33;19874:2;;;19913:18;;:::i;:::-;19874:2;19957:1;19954;19950:9;19943:16;;19754:211;;;;:::o;19971:182::-;;20027:19;20044:1;20027:19;:::i;:::-;20022:24;;20060:19;20077:1;20060:19;:::i;:::-;20055:24;;20098:1;20088:2;;20103:18;;:::i;:::-;20088:2;20145:1;20142;20138:9;20133:14;;20012:141;;;;:::o;20159:297::-;;20221:19;20238:1;20221:19;:::i;:::-;20216:24;;20254:19;20271:1;20254:19;:::i;:::-;20249:24;;20393:1;20373:18;20369:26;20366:1;20363:33;20358:1;20351:9;20344:17;20340:57;20337:2;;;20400:18;;:::i;:::-;20337:2;20448:1;20445;20441:9;20430:20;;20206:250;;;;:::o;20462:96::-;;20528:24;20546:5;20528:24;:::i;:::-;20517:35;;20507:51;;;:::o;20564:90::-;;20641:5;20634:13;20627:21;20616:32;;20606:48;;;:::o;20660:141::-;;20741:5;20730:16;;20747:48;20789:5;20747:48;:::i;:::-;20720:81;;;:::o;20807:126::-;;20884:42;20877:5;20873:54;20862:65;;20852:81;;;:::o;20939:77::-;;21005:5;20994:16;;20984:32;;;:::o;21022:93::-;;21098:10;21091:5;21087:22;21076:33;;21066:49;;;:::o;21121:101::-;;21197:18;21190:5;21186:30;21175:41;;21165:57;;;:::o;21228:141::-;;21324:39;21357:5;21324:39;:::i;:::-;21311:52;;21301:68;;;:::o;21375:154::-;21459:6;21454:3;21449;21436:30;21521:1;21512:6;21507:3;21503:16;21496:27;21426:103;;;:::o;21535:307::-;21603:1;21613:113;21627:6;21624:1;21621:13;21613:113;;;21712:1;21707:3;21703:11;21697:18;21693:1;21688:3;21684:11;21677:39;21649:2;21646:1;21642:10;21637:15;;21613:113;;;21744:6;21741:1;21738:13;21735:2;;;21824:1;21815:6;21810:3;21806:16;21799:27;21735:2;21584:258;;;;:::o;21848:320::-;;21929:1;21923:4;21919:12;21909:22;;21976:1;21970:4;21966:12;21997:18;21987:2;;22053:4;22045:6;22041:17;22031:27;;21987:2;22115;22107:6;22104:14;22084:18;22081:38;22078:2;;;22134:18;;:::i;:::-;22078:2;21899:269;;;;:::o;22174:175::-;;22235:23;22252:5;22235:23;:::i;:::-;22226:32;;22280:10;22273:5;22270:21;22267:2;;;22294:18;;:::i;:::-;22267:2;22341:1;22334:5;22330:13;22323:20;;22216:133;;;:::o;22355:180::-;22403:77;22400:1;22393:88;22500:4;22497:1;22490:15;22524:4;22521:1;22514:15;22541:180;22589:77;22586:1;22579:88;22686:4;22683:1;22676:15;22710:4;22707:1;22700:15;22727:180;22775:77;22772:1;22765:88;22872:4;22869:1;22862:15;22896:4;22893:1;22886:15;22913:180;22961:77;22958:1;22951:88;23058:4;23055:1;23048:15;23082:4;23079:1;23072:15;23099:180;23147:77;23144:1;23137:88;23244:4;23241:1;23234:15;23268:4;23265:1;23258:15;23285:102;;23377:2;23373:7;23368:2;23361:5;23357:14;23353:28;23343:38;;23333:54;;;:::o;23393:120::-;23481:1;23474:5;23471:12;23461:2;;23487:18;;:::i;:::-;23461:2;23451:62;:::o;23519:122::-;23592:24;23610:5;23592:24;:::i;:::-;23585:5;23582:35;23572:2;;23631:1;23628;23621:12;23572:2;23562:79;:::o;23647:116::-;23717:21;23732:5;23717:21;:::i;:::-;23710:5;23707:32;23697:2;;23753:1;23750;23743:12;23697:2;23687:76;:::o;23769:122::-;23842:24;23860:5;23842:24;:::i;:::-;23835:5;23832:35;23822:2;;23881:1;23878;23871:12;23822:2;23812:79;:::o;23897:120::-;23969:23;23986:5;23969:23;:::i;:::-;23962:5;23959:34;23949:2;;24007:1;24004;23997:12;23949:2;23939:78;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./token/ERC20.sol\";\r\nimport \"./token/IERC20.sol\";\r\nimport \"./ownership/Ownable.sol\";\r\nimport \"./IMonkeyMoonToken.sol\";\r\n\r\ncontract GOV is Ownable {\r\n    enum ProposalType {Basic, ChangeTaxesAddress}\r\n    \r\n    struct Proposal {\r\n        string name;\r\n        uint256 start;\r\n        uint256 end;\r\n        ProposalType proposalType;\r\n        uint64 upvotes;\r\n        uint64 downvotes; \r\n        bool executed;        \r\n        address addressToChange;\r\n        uint256 value;\r\n    }\r\n\r\n    uint16 private _taxesAddressChangeThreshold = 66;\r\n\r\n    address private _tokenAddress;\r\n    uint256 private _votingThreshold = 1000 * 10 ** 18;\r\n \r\n    uint32 public proposalNum = 0;\r\n    mapping(uint32 => Proposal) private _proposals;\r\n    mapping(address => uint256) private _votingTime;\r\n    \r\n    function addBasicProposal(string memory name, uint32 start, uint32 end) public onlyOwner {  \r\n        _addProposal(Proposal(name, start, end, ProposalType.Basic, 0, 0 , false, address(0), 0));\r\n    }\r\n\r\n    function addTaxesProposal(string memory name, uint32 start, uint32 end, address newTaxesAddress) public onlyOwner {\r\n        require(newTaxesAddress != address(0), \"Taxes address is the zero address\");       \r\n        \r\n        _addProposal(Proposal(name, start, end, ProposalType.ChangeTaxesAddress, 0, 0 , false, newTaxesAddress, 0));\r\n    }\r\n\r\n    function executeCurrentProposal() public onlyOwner() {\r\n        require(_proposals[proposalNum].end <= block.timestamp, \"Proposal hasnt ended yet\");\r\n        require(!_proposals[proposalNum].executed, \"Proposal has already been executed\");\r\n\r\n        if(_proposals[proposalNum].proposalType == ProposalType.Basic){\r\n            _proposals[proposalNum].executed = true;\r\n        }\r\n        else if(_proposals[proposalNum].proposalType == ProposalType.ChangeTaxesAddress){\r\n            uint256 approval = (_proposals[proposalNum].upvotes * 100) / (_proposals[proposalNum].downvotes + _proposals[proposalNum].upvotes);\r\n            \r\n            if(approval >= _taxesAddressChangeThreshold){\r\n                IMonkeyMoonToken(_tokenAddress).changeTaxesAddress(_proposals[proposalNum].addressToChange);\r\n            }                \r\n            _proposals[proposalNum].executed = true;\r\n        }\r\n    }\r\n    \r\n    function vote(bool accountVote) public {\r\n        require(_proposals[proposalNum].start < block.timestamp, \"Voting is not open\");\r\n        require(_proposals[proposalNum].end > block.timestamp, \"Voting is closed\");\r\n\r\n        require(IERC20(_tokenAddress).balanceOf(msg.sender) >= _votingThreshold, \"Not enough tokens for vorting rights\");\r\n        \r\n        require(_votingTime[msg.sender] < _proposals[proposalNum].start, \"Already voted\");\r\n        _votingTime[msg.sender] = block.timestamp;\r\n        \r\n        if(accountVote){\r\n            _proposals[proposalNum].upvotes += 1;\r\n        }\r\n        else{\r\n            _proposals[proposalNum].downvotes += 1;\r\n        }\r\n    }\r\n    \r\n    function getCurrentProposal() public view returns(Proposal memory) {\r\n        return _proposals[proposalNum];\r\n    }\r\n    \r\n    function getProposalByIndex(uint32 index) public view returns(Proposal memory) {\r\n        require(index <= proposalNum, \"Index out of range\");\r\n        return _proposals[index];\r\n    }\r\n\r\n    function _addProposal(Proposal memory proposal) internal {\r\n        if(proposalNum > 0){\r\n            require(_proposals[proposalNum].end < block.timestamp, \"Current proposal needs to end before a new one can be created\");\r\n            require(_proposals[proposalNum].executed, \"Current proposal has not been executed\");\r\n        }\r\n        \r\n        require(proposal.start > block.timestamp, \"Proposal needs to be in the future\");\r\n        require(proposal.start < proposal.end, \"End of proposal needs be after start\");\r\n        \r\n        \r\n        proposalNum++;\r\n        _proposals[proposalNum] = proposal;\r\n    }\r\n}\r\n\r\n",
  "sourcePath": "C:\\Users\\pasca\\Documents\\web-dev\\monkeymoon-mobile-rework\\frontend\\src\\contracts\\Gov.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/Gov.sol",
    "exportedSymbols": {
      "Context": [
        7864
      ],
      "ERC20": [
        7156
      ],
      "GOV": [
        387
      ],
      "IERC20": [
        7296
      ],
      "IERC20Metadata": [
        7321
      ],
      "IMonkeyMoonToken": [
        681
      ],
      "Ownable": [
        6490
      ]
    },
    "id": 388,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "project:/src/contracts/token/ERC20.sol",
        "file": "./token/ERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 388,
        "sourceUnit": 7157,
        "src": "60:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/token/IERC20.sol",
        "file": "./token/IERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 388,
        "sourceUnit": 7297,
        "src": "89:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/ownership/Ownable.sol",
        "file": "./ownership/Ownable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 388,
        "sourceUnit": 6491,
        "src": "119:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/IMonkeyMoonToken.sol",
        "file": "./IMonkeyMoonToken.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 388,
        "sourceUnit": 682,
        "src": "154:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6490,
              "src": "206:7:0"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "206:7:0"
          }
        ],
        "contractDependencies": [
          6490,
          7864
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 387,
        "linearizedBaseContracts": [
          387,
          6490,
          7864
        ],
        "name": "GOV",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "GOV.ProposalType",
            "id": 10,
            "members": [
              {
                "id": 8,
                "name": "Basic",
                "nodeType": "EnumValue",
                "src": "240:5:0"
              },
              {
                "id": 9,
                "name": "ChangeTaxesAddress",
                "nodeType": "EnumValue",
                "src": "247:18:0"
              }
            ],
            "name": "ProposalType",
            "nodeType": "EnumDefinition",
            "src": "221:45:0"
          },
          {
            "canonicalName": "GOV.Proposal",
            "id": 30,
            "members": [
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "305:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 11,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "305:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "start",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "327:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "327:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "end",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "351:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "351:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "proposalType",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "373:25:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_ProposalType_$10",
                  "typeString": "enum GOV.ProposalType"
                },
                "typeName": {
                  "id": 18,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 17,
                    "name": "ProposalType",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 10,
                    "src": "373:12:0"
                  },
                  "referencedDeclaration": 10,
                  "src": "373:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ProposalType_$10",
                    "typeString": "enum GOV.ProposalType"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "upvotes",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "409:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 20,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "409:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "downvotes",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "434:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 22,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "434:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25,
                "mutability": "mutable",
                "name": "executed",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "462:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 24,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "462:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "addressToChange",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "494:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 26,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "494:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "528:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "528:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nodeType": "StructDefinition",
            "scope": 387,
            "src": "278:271:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 33,
            "mutability": "mutable",
            "name": "_taxesAddressChangeThreshold",
            "nodeType": "VariableDeclaration",
            "scope": 387,
            "src": "557:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 31,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "557:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "3636",
              "id": 32,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "603:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_66_by_1",
                "typeString": "int_const 66"
              },
              "value": "66"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 35,
            "mutability": "mutable",
            "name": "_tokenAddress",
            "nodeType": "VariableDeclaration",
            "scope": 387,
            "src": "614:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "614:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "_votingThreshold",
            "nodeType": "VariableDeclaration",
            "scope": 387,
            "src": "650:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "650:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000"
              },
              "id": 41,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "31303030",
                "id": 37,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "685:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000_by_1",
                  "typeString": "int_const 1000"
                },
                "value": "1000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "id": 40,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 38,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "692:2:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "3138",
                  "id": 39,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "698:2:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "692:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "685:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "9f2f1942",
            "id": 45,
            "mutability": "mutable",
            "name": "proposalNum",
            "nodeType": "VariableDeclaration",
            "scope": 387,
            "src": "710:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 43,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "710:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 44,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "738:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 50,
            "mutability": "mutable",
            "name": "_proposals",
            "nodeType": "VariableDeclaration",
            "scope": 387,
            "src": "746:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
              "typeString": "mapping(uint32 => struct GOV.Proposal)"
            },
            "typeName": {
              "id": 49,
              "keyType": {
                "id": 46,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "754:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "nodeType": "Mapping",
              "src": "746:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                "typeString": "mapping(uint32 => struct GOV.Proposal)"
              },
              "valueType": {
                "id": 48,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 47,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30,
                  "src": "764:8:0"
                },
                "referencedDeclaration": 30,
                "src": "764:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$30_storage_ptr",
                  "typeString": "struct GOV.Proposal"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 54,
            "mutability": "mutable",
            "name": "_votingTime",
            "nodeType": "VariableDeclaration",
            "scope": 387,
            "src": "799:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 53,
              "keyType": {
                "id": 51,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "807:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "799:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 52,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "818:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 83,
              "nodeType": "Block",
              "src": "948:110:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "983:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 68,
                            "name": "start",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "989:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 69,
                            "name": "end",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "996:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "expression": {
                              "id": 70,
                              "name": "ProposalType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "1001:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalType_$10_$",
                                "typeString": "type(enum GOV.ProposalType)"
                              }
                            },
                            "id": 71,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Basic",
                            "nodeType": "MemberAccess",
                            "src": "1001:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalType_$10",
                              "typeString": "enum GOV.ProposalType"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1021:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 73,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1024:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1028:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 77,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1043:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 76,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1035:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 75,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1035:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1035:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1047:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_enum$_ProposalType_$10",
                              "typeString": "enum GOV.ProposalType"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 66,
                          "name": "Proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "974:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Proposal_$30_storage_ptr_$",
                            "typeString": "type(struct GOV.Proposal storage pointer)"
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "974:75:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$30_memory_ptr",
                          "typeString": "struct GOV.Proposal memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Proposal_$30_memory_ptr",
                          "typeString": "struct GOV.Proposal memory"
                        }
                      ],
                      "id": 65,
                      "name": "_addProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 386,
                      "src": "961:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Proposal_$30_memory_ptr_$returns$__$",
                        "typeString": "function (struct GOV.Proposal memory)"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "961:89:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "961:89:0"
                }
              ]
            },
            "functionSelector": "7526fba7",
            "id": 84,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 63,
                "modifierName": {
                  "id": 62,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6439,
                  "src": "938:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "938:9:0"
              }
            ],
            "name": "addBasicProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "885:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "start",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "905:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "end",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "919:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "919:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "884:46:0"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "948:0:0"
            },
            "scope": 387,
            "src": "859:199:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "1180:229:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98,
                          "name": "newTaxesAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "1199:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1226:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1218:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 99,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1218:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1218:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1199:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5461786573206164647265737320697320746865207a65726f2061646472657373",
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1230:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f1cb6ae5f8d388ca758957909026d881ea8885e3881caba255c4110406af0ed",
                          "typeString": "literal_string \"Taxes address is the zero address\""
                        },
                        "value": "Taxes address is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f1cb6ae5f8d388ca758957909026d881ea8885e3881caba255c4110406af0ed",
                          "typeString": "literal_string \"Taxes address is the zero address\""
                        }
                      ],
                      "id": 97,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1191:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1191:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1191:75:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 109,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "1316:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 110,
                            "name": "start",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88,
                            "src": "1322:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 111,
                            "name": "end",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90,
                            "src": "1329:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "expression": {
                              "id": 112,
                              "name": "ProposalType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "1334:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalType_$10_$",
                                "typeString": "type(enum GOV.ProposalType)"
                              }
                            },
                            "id": 113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ChangeTaxesAddress",
                            "nodeType": "MemberAccess",
                            "src": "1334:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalType_$10",
                              "typeString": "enum GOV.ProposalType"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1367:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1370:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1374:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "id": 117,
                            "name": "newTaxesAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "1381:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1398:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_enum$_ProposalType_$10",
                              "typeString": "enum GOV.ProposalType"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 108,
                          "name": "Proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "1307:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Proposal_$30_storage_ptr_$",
                            "typeString": "type(struct GOV.Proposal storage pointer)"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1307:93:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$30_memory_ptr",
                          "typeString": "struct GOV.Proposal memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Proposal_$30_memory_ptr",
                          "typeString": "struct GOV.Proposal memory"
                        }
                      ],
                      "id": 107,
                      "name": "_addProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 386,
                      "src": "1294:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Proposal_$30_memory_ptr_$returns$__$",
                        "typeString": "function (struct GOV.Proposal memory)"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1294:107:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:107:0"
                }
              ]
            },
            "functionSelector": "bc20669a",
            "id": 123,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 95,
                "modifierName": {
                  "id": 94,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6439,
                  "src": "1170:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1170:9:0"
              }
            ],
            "name": "addTaxesProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1092:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "start",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1112:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "end",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1126:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1126:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "newTaxesAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1138:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1138:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1091:71:0"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1180:0:0"
            },
            "scope": 387,
            "src": "1066:343:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 216,
              "nodeType": "Block",
              "src": "1470:848:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 129,
                              "name": "_proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "1489:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                              }
                            },
                            "id": 131,
                            "indexExpression": {
                              "id": 130,
                              "name": "proposalNum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "1500:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1489:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$30_storage",
                              "typeString": "struct GOV.Proposal storage ref"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "end",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16,
                          "src": "1489:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 133,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1520:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1520:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1489:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c206861736e7420656e64656420796574",
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1537:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a7631ce4b1d67ab2ea2e3a99864ad2ef66eaa23be33f43d861743cc997b52b6d",
                          "typeString": "literal_string \"Proposal hasnt ended yet\""
                        },
                        "value": "Proposal hasnt ended yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a7631ce4b1d67ab2ea2e3a99864ad2ef66eaa23be33f43d861743cc997b52b6d",
                          "typeString": "literal_string \"Proposal hasnt ended yet\""
                        }
                      ],
                      "id": 128,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1481:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1481:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "1481:83:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1583:33:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 140,
                              "name": "_proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "1584:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                              }
                            },
                            "id": 142,
                            "indexExpression": {
                              "id": 141,
                              "name": "proposalNum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "1595:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1584:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$30_storage",
                              "typeString": "struct GOV.Proposal storage ref"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25,
                          "src": "1584:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c2068617320616c7265616479206265656e206578656375746564",
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1618:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c2018ab3281d5f803db36d5c7db0892a89e978895e4947aa99e1a29a222dff3",
                          "typeString": "literal_string \"Proposal has already been executed\""
                        },
                        "value": "Proposal has already been executed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c2018ab3281d5f803db36d5c7db0892a89e978895e4947aa99e1a29a222dff3",
                          "typeString": "literal_string \"Proposal has already been executed\""
                        }
                      ],
                      "id": 139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1575:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1575:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "1575:80:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_ProposalType_$10",
                      "typeString": "enum GOV.ProposalType"
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 148,
                          "name": "_proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "1671:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                            "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                          }
                        },
                        "id": 150,
                        "indexExpression": {
                          "id": 149,
                          "name": "proposalNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "1682:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1671:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$30_storage",
                          "typeString": "struct GOV.Proposal storage ref"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposalType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "1671:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalType_$10",
                        "typeString": "enum GOV.ProposalType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 152,
                        "name": "ProposalType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1711:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProposalType_$10_$",
                          "typeString": "type(enum GOV.ProposalType)"
                        }
                      },
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Basic",
                      "nodeType": "MemberAccess",
                      "src": "1711:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalType_$10",
                        "typeString": "enum GOV.ProposalType"
                      }
                    },
                    "src": "1671:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_ProposalType_$10",
                        "typeString": "enum GOV.ProposalType"
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 163,
                            "name": "_proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "1814:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                              "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                            }
                          },
                          "id": 165,
                          "indexExpression": {
                            "id": 164,
                            "name": "proposalNum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "1825:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1814:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$30_storage",
                            "typeString": "struct GOV.Proposal storage ref"
                          }
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "proposalType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19,
                        "src": "1814:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProposalType_$10",
                          "typeString": "enum GOV.ProposalType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 167,
                          "name": "ProposalType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1854:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ProposalType_$10_$",
                            "typeString": "type(enum GOV.ProposalType)"
                          }
                        },
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ChangeTaxesAddress",
                        "nodeType": "MemberAccess",
                        "src": "1854:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProposalType_$10",
                          "typeString": "enum GOV.ProposalType"
                        }
                      },
                      "src": "1814:71:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 214,
                    "nodeType": "IfStatement",
                    "src": "1811:500:0",
                    "trueBody": {
                      "id": 213,
                      "nodeType": "Block",
                      "src": "1886:425:0",
                      "statements": [
                        {
                          "assignments": [
                            171
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 171,
                              "mutability": "mutable",
                              "name": "approval",
                              "nodeType": "VariableDeclaration",
                              "scope": 213,
                              "src": "1901:16:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 170,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1901:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 190,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  },
                                  "id": 177,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 172,
                                        "name": "_proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 50,
                                        "src": "1921:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                          "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                                        }
                                      },
                                      "id": 174,
                                      "indexExpression": {
                                        "id": 173,
                                        "name": "proposalNum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45,
                                        "src": "1932:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1921:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$30_storage",
                                        "typeString": "struct GOV.Proposal storage ref"
                                      }
                                    },
                                    "id": 175,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "upvotes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21,
                                    "src": "1921:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "313030",
                                    "id": 176,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1955:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  },
                                  "src": "1921:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "id": 178,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1920:39:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  },
                                  "id": 187,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 179,
                                        "name": "_proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 50,
                                        "src": "1963:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                          "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                                        }
                                      },
                                      "id": 181,
                                      "indexExpression": {
                                        "id": 180,
                                        "name": "proposalNum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45,
                                        "src": "1974:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1963:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$30_storage",
                                        "typeString": "struct GOV.Proposal storage ref"
                                      }
                                    },
                                    "id": 182,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "downvotes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23,
                                    "src": "1963:33:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 183,
                                        "name": "_proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 50,
                                        "src": "1999:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                          "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                                        }
                                      },
                                      "id": 185,
                                      "indexExpression": {
                                        "id": 184,
                                        "name": "proposalNum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45,
                                        "src": "2010:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1999:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$30_storage",
                                        "typeString": "struct GOV.Proposal storage ref"
                                      }
                                    },
                                    "id": 186,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "upvotes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21,
                                    "src": "1999:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "src": "1963:67:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "id": 188,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1962:69:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "src": "1920:111:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1901:130:0"
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 191,
                              "name": "approval",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 171,
                              "src": "2063:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 192,
                              "name": "_taxesAddressChangeThreshold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "2075:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "src": "2063:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 205,
                          "nodeType": "IfStatement",
                          "src": "2060:170:0",
                          "trueBody": {
                            "id": 204,
                            "nodeType": "Block",
                            "src": "2104:126:0",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 198,
                                          "name": "_proposals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 50,
                                          "src": "2174:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                            "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                                          }
                                        },
                                        "id": 200,
                                        "indexExpression": {
                                          "id": 199,
                                          "name": "proposalNum",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45,
                                          "src": "2185:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2174:23:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$30_storage",
                                          "typeString": "struct GOV.Proposal storage ref"
                                        }
                                      },
                                      "id": 201,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "addressToChange",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 27,
                                      "src": "2174:39:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 195,
                                          "name": "_tokenAddress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 35,
                                          "src": "2140:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 194,
                                        "name": "IMonkeyMoonToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 681,
                                        "src": "2123:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IMonkeyMoonToken_$681_$",
                                          "typeString": "type(contract IMonkeyMoonToken)"
                                        }
                                      },
                                      "id": 196,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2123:31:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IMonkeyMoonToken_$681",
                                        "typeString": "contract IMonkeyMoonToken"
                                      }
                                    },
                                    "id": 197,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "changeTaxesAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 680,
                                    "src": "2123:50:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                      "typeString": "function (address) external"
                                    }
                                  },
                                  "id": 202,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2123:91:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 203,
                                "nodeType": "ExpressionStatement",
                                "src": "2123:91:0"
                              }
                            ]
                          }
                        },
                        {
                          "expression": {
                            "id": 211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 206,
                                  "name": "_proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50,
                                  "src": "2260:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                    "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                                  }
                                },
                                "id": 208,
                                "indexExpression": {
                                  "id": 207,
                                  "name": "proposalNum",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45,
                                  "src": "2271:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2260:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$30_storage",
                                  "typeString": "struct GOV.Proposal storage ref"
                                }
                              },
                              "id": 209,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "executed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25,
                              "src": "2260:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "74727565",
                              "id": 210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2295:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "2260:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 212,
                          "nodeType": "ExpressionStatement",
                          "src": "2260:39:0"
                        }
                      ]
                    }
                  },
                  "id": 215,
                  "nodeType": "IfStatement",
                  "src": "1668:643:0",
                  "trueBody": {
                    "id": 162,
                    "nodeType": "Block",
                    "src": "1730:66:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 155,
                                "name": "_proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50,
                                "src": "1745:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                  "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                                }
                              },
                              "id": 157,
                              "indexExpression": {
                                "id": 156,
                                "name": "proposalNum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45,
                                "src": "1756:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1745:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$30_storage",
                                "typeString": "struct GOV.Proposal storage ref"
                              }
                            },
                            "id": 158,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "executed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25,
                            "src": "1745:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1780:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1745:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 161,
                        "nodeType": "ExpressionStatement",
                        "src": "1745:39:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "0d56575d",
            "id": 217,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 126,
                "modifierName": {
                  "id": 125,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6439,
                  "src": "1458:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1458:11:0"
              }
            ],
            "name": "executeCurrentProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1448:2:0"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1470:0:0"
            },
            "scope": 387,
            "src": "1417:901:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 296,
              "nodeType": "Block",
              "src": "2369:638:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 223,
                              "name": "_proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "2388:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                              }
                            },
                            "id": 225,
                            "indexExpression": {
                              "id": 224,
                              "name": "proposalNum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "2399:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2388:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$30_storage",
                              "typeString": "struct GOV.Proposal storage ref"
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "start",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14,
                          "src": "2388:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 227,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2420:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2420:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2388:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74696e67206973206e6f74206f70656e",
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2437:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4bd03e1a30494a055957512ea8d56151bd2a1a9090f409d257d985dbb793b2b6",
                          "typeString": "literal_string \"Voting is not open\""
                        },
                        "value": "Voting is not open"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4bd03e1a30494a055957512ea8d56151bd2a1a9090f409d257d985dbb793b2b6",
                          "typeString": "literal_string \"Voting is not open\""
                        }
                      ],
                      "id": 222,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2380:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2380:78:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "2380:78:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 234,
                              "name": "_proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "2477:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                              }
                            },
                            "id": 236,
                            "indexExpression": {
                              "id": 235,
                              "name": "proposalNum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "2488:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2477:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$30_storage",
                              "typeString": "struct GOV.Proposal storage ref"
                            }
                          },
                          "id": 237,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "end",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16,
                          "src": "2477:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 238,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2507:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2507:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2477:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74696e6720697320636c6f736564",
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2524:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee7290904f8766469ab01017a93a06f58efe604018332076bd6b66c54b4d1379",
                          "typeString": "literal_string \"Voting is closed\""
                        },
                        "value": "Voting is closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee7290904f8766469ab01017a93a06f58efe604018332076bd6b66c54b4d1379",
                          "typeString": "literal_string \"Voting is closed\""
                        }
                      ],
                      "id": 233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2469:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2469:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "2469:74:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 249,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2596:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2596:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 246,
                                  "name": "_tokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "2571:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 245,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7296,
                                "src": "2564:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$7296_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2564:21:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$7296",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7235,
                            "src": "2564:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2564:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 252,
                          "name": "_votingThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "2611:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2564:63:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e7320666f7220766f7274696e6720726967687473",
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2629:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6478cb6d77054c533019506f690616008a73b4d8a8e6ce0e838c9006bc9d3c9f",
                          "typeString": "literal_string \"Not enough tokens for vorting rights\""
                        },
                        "value": "Not enough tokens for vorting rights"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6478cb6d77054c533019506f690616008a73b4d8a8e6ce0e838c9006bc9d3c9f",
                          "typeString": "literal_string \"Not enough tokens for vorting rights\""
                        }
                      ],
                      "id": 244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2556:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2556:112:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "2556:112:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 258,
                            "name": "_votingTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "2697:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 261,
                          "indexExpression": {
                            "expression": {
                              "id": 259,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2709:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2709:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2697:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 262,
                              "name": "_proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "2723:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                              }
                            },
                            "id": 264,
                            "indexExpression": {
                              "id": 263,
                              "name": "proposalNum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "2734:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2723:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$30_storage",
                              "typeString": "struct GOV.Proposal storage ref"
                            }
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "start",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14,
                          "src": "2723:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2697:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920766f746564",
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2754:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
                          "typeString": "literal_string \"Already voted\""
                        },
                        "value": "Already voted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
                          "typeString": "literal_string \"Already voted\""
                        }
                      ],
                      "id": 257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2689:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2689:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "2689:81:0"
                },
                {
                  "expression": {
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 270,
                        "name": "_votingTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "2781:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 273,
                      "indexExpression": {
                        "expression": {
                          "id": 271,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2793:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2793:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2781:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 274,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "2807:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2807:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2781:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "2781:41:0"
                },
                {
                  "condition": {
                    "id": 278,
                    "name": "accountVote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 219,
                    "src": "2846:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 294,
                    "nodeType": "Block",
                    "src": "2935:65:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 287,
                                "name": "_proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50,
                                "src": "2950:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                  "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                                }
                              },
                              "id": 289,
                              "indexExpression": {
                                "id": 288,
                                "name": "proposalNum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45,
                                "src": "2961:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2950:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$30_storage",
                                "typeString": "struct GOV.Proposal storage ref"
                              }
                            },
                            "id": 290,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "downvotes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23,
                            "src": "2950:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2987:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2950:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 293,
                        "nodeType": "ExpressionStatement",
                        "src": "2950:38:0"
                      }
                    ]
                  },
                  "id": 295,
                  "nodeType": "IfStatement",
                  "src": "2843:157:0",
                  "trueBody": {
                    "id": 286,
                    "nodeType": "Block",
                    "src": "2858:63:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 279,
                                "name": "_proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50,
                                "src": "2873:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                  "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                                }
                              },
                              "id": 281,
                              "indexExpression": {
                                "id": 280,
                                "name": "proposalNum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45,
                                "src": "2884:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2873:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$30_storage",
                                "typeString": "struct GOV.Proposal storage ref"
                              }
                            },
                            "id": 282,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "upvotes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "2873:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2908:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2873:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 285,
                        "nodeType": "ExpressionStatement",
                        "src": "2873:36:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "4b9f5c98",
            "id": 297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "mutability": "mutable",
                  "name": "accountVote",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "2344:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2344:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2343:18:0"
            },
            "returnParameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2369:0:0"
            },
            "scope": 387,
            "src": "2330:677:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 307,
              "nodeType": "Block",
              "src": "3086:49:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 303,
                      "name": "_proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "3104:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                        "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                      }
                    },
                    "id": 305,
                    "indexExpression": {
                      "id": 304,
                      "name": "proposalNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "3115:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3104:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$30_storage",
                      "typeString": "struct GOV.Proposal storage ref"
                    }
                  },
                  "functionReturnParameters": 302,
                  "id": 306,
                  "nodeType": "Return",
                  "src": "3097:30:0"
                }
              ]
            },
            "functionSelector": "41ec6870",
            "id": 308,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3046:2:0"
            },
            "returnParameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 301,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "3069:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proposal_$30_memory_ptr",
                    "typeString": "struct GOV.Proposal"
                  },
                  "typeName": {
                    "id": 300,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 299,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30,
                      "src": "3069:8:0"
                    },
                    "referencedDeclaration": 30,
                    "src": "3069:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$30_storage_ptr",
                      "typeString": "struct GOV.Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3068:17:0"
            },
            "scope": 387,
            "src": "3019:116:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 327,
              "nodeType": "Block",
              "src": "3226:105:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 317,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "3245:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 318,
                          "name": "proposalNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "3254:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "3245:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e646578206f7574206f662072616e6765",
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3267:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9580fd05844cb84bf0a747c48ec42a21f1dca0bc044d3619707fb319eddae0d",
                          "typeString": "literal_string \"Index out of range\""
                        },
                        "value": "Index out of range"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9580fd05844cb84bf0a747c48ec42a21f1dca0bc044d3619707fb319eddae0d",
                          "typeString": "literal_string \"Index out of range\""
                        }
                      ],
                      "id": 316,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3237:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3237:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "3237:51:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 323,
                      "name": "_proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "3306:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                        "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                      }
                    },
                    "id": 325,
                    "indexExpression": {
                      "id": 324,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 310,
                      "src": "3317:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3306:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$30_storage",
                      "typeString": "struct GOV.Proposal storage ref"
                    }
                  },
                  "functionReturnParameters": 315,
                  "id": 326,
                  "nodeType": "Return",
                  "src": "3299:24:0"
                }
              ]
            },
            "functionSelector": "37e9b9a7",
            "id": 328,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProposalByIndex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 310,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 328,
                  "src": "3175:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 309,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3175:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3174:14:0"
            },
            "returnParameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 314,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 328,
                  "src": "3209:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proposal_$30_memory_ptr",
                    "typeString": "struct GOV.Proposal"
                  },
                  "typeName": {
                    "id": 313,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 312,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30,
                      "src": "3209:8:0"
                    },
                    "referencedDeclaration": 30,
                    "src": "3209:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$30_storage_ptr",
                      "typeString": "struct GOV.Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3208:17:0"
            },
            "scope": 387,
            "src": "3147:184:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 385,
              "nodeType": "Block",
              "src": "3396:559:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 334,
                      "name": "proposalNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "3410:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3424:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3410:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 357,
                  "nodeType": "IfStatement",
                  "src": "3407:263:0",
                  "trueBody": {
                    "id": 356,
                    "nodeType": "Block",
                    "src": "3426:244:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 338,
                                    "name": "_proposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 50,
                                    "src": "3449:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                      "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                                    }
                                  },
                                  "id": 340,
                                  "indexExpression": {
                                    "id": 339,
                                    "name": "proposalNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45,
                                    "src": "3460:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3449:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$30_storage",
                                    "typeString": "struct GOV.Proposal storage ref"
                                  }
                                },
                                "id": 341,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "end",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 16,
                                "src": "3449:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 342,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "3479:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 343,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "3479:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3449:45:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43757272656e742070726f706f73616c206e6565647320746f20656e64206265666f72652061206e6577206f6e652063616e2062652063726561746564",
                              "id": 345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3496:63:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_065e43b5ef1d4e76d7edd0fbe0a29f349b29104487f97e8b32ca1643b06c678e",
                                "typeString": "literal_string \"Current proposal needs to end before a new one can be created\""
                              },
                              "value": "Current proposal needs to end before a new one can be created"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_065e43b5ef1d4e76d7edd0fbe0a29f349b29104487f97e8b32ca1643b06c678e",
                                "typeString": "literal_string \"Current proposal needs to end before a new one can be created\""
                              }
                            ],
                            "id": 337,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3441:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3441:119:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 347,
                        "nodeType": "ExpressionStatement",
                        "src": "3441:119:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 349,
                                  "name": "_proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50,
                                  "src": "3583:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                    "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                                  }
                                },
                                "id": 351,
                                "indexExpression": {
                                  "id": 350,
                                  "name": "proposalNum",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45,
                                  "src": "3594:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3583:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$30_storage",
                                  "typeString": "struct GOV.Proposal storage ref"
                                }
                              },
                              "id": 352,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "executed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25,
                              "src": "3583:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43757272656e742070726f706f73616c20686173206e6f74206265656e206578656375746564",
                              "id": 353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3617:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a9d4a1a1f8ea8c67a10cb82cd451dac7c75d124426d7a37aed61b7b36fe04a84",
                                "typeString": "literal_string \"Current proposal has not been executed\""
                              },
                              "value": "Current proposal has not been executed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a9d4a1a1f8ea8c67a10cb82cd451dac7c75d124426d7a37aed61b7b36fe04a84",
                                "typeString": "literal_string \"Current proposal has not been executed\""
                              }
                            ],
                            "id": 348,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3575:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3575:83:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 355,
                        "nodeType": "ExpressionStatement",
                        "src": "3575:83:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 359,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 331,
                            "src": "3698:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$30_memory_ptr",
                              "typeString": "struct GOV.Proposal memory"
                            }
                          },
                          "id": 360,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "start",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14,
                          "src": "3698:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 361,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3715:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3715:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3698:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c206e6565647320746f20626520696e2074686520667574757265",
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3732:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b54396c962020cdeb47afea5d4fe26f8a3f301ae583ed844e999bb77ee3a0b8",
                          "typeString": "literal_string \"Proposal needs to be in the future\""
                        },
                        "value": "Proposal needs to be in the future"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b54396c962020cdeb47afea5d4fe26f8a3f301ae583ed844e999bb77ee3a0b8",
                          "typeString": "literal_string \"Proposal needs to be in the future\""
                        }
                      ],
                      "id": 358,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3690:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3690:79:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "3690:79:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 368,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 331,
                            "src": "3788:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$30_memory_ptr",
                              "typeString": "struct GOV.Proposal memory"
                            }
                          },
                          "id": 369,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "start",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14,
                          "src": "3788:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 370,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 331,
                            "src": "3805:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$30_memory_ptr",
                              "typeString": "struct GOV.Proposal memory"
                            }
                          },
                          "id": 371,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "end",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16,
                          "src": "3805:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3788:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456e64206f662070726f706f73616c206e65656473206265206166746572207374617274",
                        "id": 373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3819:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_021bbc0d0cd3b18cd09c04eb2ee2bea6559b9c286ce3e8b0e320c330e50d21c4",
                          "typeString": "literal_string \"End of proposal needs be after start\""
                        },
                        "value": "End of proposal needs be after start"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_021bbc0d0cd3b18cd09c04eb2ee2bea6559b9c286ce3e8b0e320c330e50d21c4",
                          "typeString": "literal_string \"End of proposal needs be after start\""
                        }
                      ],
                      "id": 367,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3780:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3780:78:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 375,
                  "nodeType": "ExpressionStatement",
                  "src": "3780:78:0"
                },
                {
                  "expression": {
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3889:13:0",
                    "subExpression": {
                      "id": 376,
                      "name": "proposalNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "3889:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 378,
                  "nodeType": "ExpressionStatement",
                  "src": "3889:13:0"
                },
                {
                  "expression": {
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 379,
                        "name": "_proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "3913:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                          "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                        }
                      },
                      "id": 381,
                      "indexExpression": {
                        "id": 380,
                        "name": "proposalNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "3924:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3913:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$30_storage",
                        "typeString": "struct GOV.Proposal storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 382,
                      "name": "proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 331,
                      "src": "3939:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$30_memory_ptr",
                        "typeString": "struct GOV.Proposal memory"
                      }
                    },
                    "src": "3913:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$30_storage",
                      "typeString": "struct GOV.Proposal storage ref"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "3913:34:0"
                }
              ]
            },
            "id": 386,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 331,
                  "mutability": "mutable",
                  "name": "proposal",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "3361:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proposal_$30_memory_ptr",
                    "typeString": "struct GOV.Proposal"
                  },
                  "typeName": {
                    "id": 330,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 329,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30,
                      "src": "3361:8:0"
                    },
                    "referencedDeclaration": 30,
                    "src": "3361:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$30_storage_ptr",
                      "typeString": "struct GOV.Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3360:26:0"
            },
            "returnParameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3396:0:0"
            },
            "scope": 387,
            "src": "3339:616:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 388,
        "src": "190:3768:0"
      }
    ],
    "src": "33:3929:0"
  },
  "legacyAST": {
    "absolutePath": "project:/src/contracts/Gov.sol",
    "exportedSymbols": {
      "Context": [
        7864
      ],
      "ERC20": [
        7156
      ],
      "GOV": [
        387
      ],
      "IERC20": [
        7296
      ],
      "IERC20Metadata": [
        7321
      ],
      "IMonkeyMoonToken": [
        681
      ],
      "Ownable": [
        6490
      ]
    },
    "id": 388,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "project:/src/contracts/token/ERC20.sol",
        "file": "./token/ERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 388,
        "sourceUnit": 7157,
        "src": "60:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/token/IERC20.sol",
        "file": "./token/IERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 388,
        "sourceUnit": 7297,
        "src": "89:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/ownership/Ownable.sol",
        "file": "./ownership/Ownable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 388,
        "sourceUnit": 6491,
        "src": "119:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/IMonkeyMoonToken.sol",
        "file": "./IMonkeyMoonToken.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 388,
        "sourceUnit": 682,
        "src": "154:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6490,
              "src": "206:7:0"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "206:7:0"
          }
        ],
        "contractDependencies": [
          6490,
          7864
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 387,
        "linearizedBaseContracts": [
          387,
          6490,
          7864
        ],
        "name": "GOV",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "GOV.ProposalType",
            "id": 10,
            "members": [
              {
                "id": 8,
                "name": "Basic",
                "nodeType": "EnumValue",
                "src": "240:5:0"
              },
              {
                "id": 9,
                "name": "ChangeTaxesAddress",
                "nodeType": "EnumValue",
                "src": "247:18:0"
              }
            ],
            "name": "ProposalType",
            "nodeType": "EnumDefinition",
            "src": "221:45:0"
          },
          {
            "canonicalName": "GOV.Proposal",
            "id": 30,
            "members": [
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "305:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 11,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "305:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "start",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "327:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "327:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "end",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "351:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "351:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "proposalType",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "373:25:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_ProposalType_$10",
                  "typeString": "enum GOV.ProposalType"
                },
                "typeName": {
                  "id": 18,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 17,
                    "name": "ProposalType",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 10,
                    "src": "373:12:0"
                  },
                  "referencedDeclaration": 10,
                  "src": "373:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ProposalType_$10",
                    "typeString": "enum GOV.ProposalType"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "upvotes",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "409:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 20,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "409:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "downvotes",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "434:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 22,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "434:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25,
                "mutability": "mutable",
                "name": "executed",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "462:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 24,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "462:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "addressToChange",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "494:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 26,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "494:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "528:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "528:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nodeType": "StructDefinition",
            "scope": 387,
            "src": "278:271:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 33,
            "mutability": "mutable",
            "name": "_taxesAddressChangeThreshold",
            "nodeType": "VariableDeclaration",
            "scope": 387,
            "src": "557:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 31,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "557:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "3636",
              "id": 32,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "603:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_66_by_1",
                "typeString": "int_const 66"
              },
              "value": "66"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 35,
            "mutability": "mutable",
            "name": "_tokenAddress",
            "nodeType": "VariableDeclaration",
            "scope": 387,
            "src": "614:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "614:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "_votingThreshold",
            "nodeType": "VariableDeclaration",
            "scope": 387,
            "src": "650:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "650:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000"
              },
              "id": 41,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "31303030",
                "id": 37,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "685:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000_by_1",
                  "typeString": "int_const 1000"
                },
                "value": "1000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "id": 40,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 38,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "692:2:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "3138",
                  "id": 39,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "698:2:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "692:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "685:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "9f2f1942",
            "id": 45,
            "mutability": "mutable",
            "name": "proposalNum",
            "nodeType": "VariableDeclaration",
            "scope": 387,
            "src": "710:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 43,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "710:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 44,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "738:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 50,
            "mutability": "mutable",
            "name": "_proposals",
            "nodeType": "VariableDeclaration",
            "scope": 387,
            "src": "746:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
              "typeString": "mapping(uint32 => struct GOV.Proposal)"
            },
            "typeName": {
              "id": 49,
              "keyType": {
                "id": 46,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "754:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "nodeType": "Mapping",
              "src": "746:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                "typeString": "mapping(uint32 => struct GOV.Proposal)"
              },
              "valueType": {
                "id": 48,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 47,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30,
                  "src": "764:8:0"
                },
                "referencedDeclaration": 30,
                "src": "764:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$30_storage_ptr",
                  "typeString": "struct GOV.Proposal"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 54,
            "mutability": "mutable",
            "name": "_votingTime",
            "nodeType": "VariableDeclaration",
            "scope": 387,
            "src": "799:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 53,
              "keyType": {
                "id": 51,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "807:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "799:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 52,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "818:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 83,
              "nodeType": "Block",
              "src": "948:110:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "983:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 68,
                            "name": "start",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "989:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 69,
                            "name": "end",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "996:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "expression": {
                              "id": 70,
                              "name": "ProposalType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "1001:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalType_$10_$",
                                "typeString": "type(enum GOV.ProposalType)"
                              }
                            },
                            "id": 71,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Basic",
                            "nodeType": "MemberAccess",
                            "src": "1001:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalType_$10",
                              "typeString": "enum GOV.ProposalType"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1021:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 73,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1024:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1028:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 77,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1043:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 76,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1035:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 75,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1035:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1035:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1047:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_enum$_ProposalType_$10",
                              "typeString": "enum GOV.ProposalType"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 66,
                          "name": "Proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "974:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Proposal_$30_storage_ptr_$",
                            "typeString": "type(struct GOV.Proposal storage pointer)"
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "974:75:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$30_memory_ptr",
                          "typeString": "struct GOV.Proposal memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Proposal_$30_memory_ptr",
                          "typeString": "struct GOV.Proposal memory"
                        }
                      ],
                      "id": 65,
                      "name": "_addProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 386,
                      "src": "961:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Proposal_$30_memory_ptr_$returns$__$",
                        "typeString": "function (struct GOV.Proposal memory)"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "961:89:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "961:89:0"
                }
              ]
            },
            "functionSelector": "7526fba7",
            "id": 84,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 63,
                "modifierName": {
                  "id": 62,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6439,
                  "src": "938:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "938:9:0"
              }
            ],
            "name": "addBasicProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "885:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "start",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "905:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "end",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "919:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "919:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "884:46:0"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "948:0:0"
            },
            "scope": 387,
            "src": "859:199:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "1180:229:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98,
                          "name": "newTaxesAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "1199:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1226:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1218:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 99,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1218:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1218:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1199:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5461786573206164647265737320697320746865207a65726f2061646472657373",
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1230:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f1cb6ae5f8d388ca758957909026d881ea8885e3881caba255c4110406af0ed",
                          "typeString": "literal_string \"Taxes address is the zero address\""
                        },
                        "value": "Taxes address is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f1cb6ae5f8d388ca758957909026d881ea8885e3881caba255c4110406af0ed",
                          "typeString": "literal_string \"Taxes address is the zero address\""
                        }
                      ],
                      "id": 97,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1191:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1191:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1191:75:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 109,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "1316:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 110,
                            "name": "start",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88,
                            "src": "1322:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 111,
                            "name": "end",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90,
                            "src": "1329:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "expression": {
                              "id": 112,
                              "name": "ProposalType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "1334:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalType_$10_$",
                                "typeString": "type(enum GOV.ProposalType)"
                              }
                            },
                            "id": 113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ChangeTaxesAddress",
                            "nodeType": "MemberAccess",
                            "src": "1334:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalType_$10",
                              "typeString": "enum GOV.ProposalType"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1367:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1370:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1374:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "id": 117,
                            "name": "newTaxesAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "1381:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1398:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_enum$_ProposalType_$10",
                              "typeString": "enum GOV.ProposalType"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 108,
                          "name": "Proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "1307:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Proposal_$30_storage_ptr_$",
                            "typeString": "type(struct GOV.Proposal storage pointer)"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1307:93:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$30_memory_ptr",
                          "typeString": "struct GOV.Proposal memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Proposal_$30_memory_ptr",
                          "typeString": "struct GOV.Proposal memory"
                        }
                      ],
                      "id": 107,
                      "name": "_addProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 386,
                      "src": "1294:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Proposal_$30_memory_ptr_$returns$__$",
                        "typeString": "function (struct GOV.Proposal memory)"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1294:107:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:107:0"
                }
              ]
            },
            "functionSelector": "bc20669a",
            "id": 123,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 95,
                "modifierName": {
                  "id": 94,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6439,
                  "src": "1170:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1170:9:0"
              }
            ],
            "name": "addTaxesProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1092:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "start",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1112:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "end",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1126:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1126:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "newTaxesAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1138:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1138:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1091:71:0"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1180:0:0"
            },
            "scope": 387,
            "src": "1066:343:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 216,
              "nodeType": "Block",
              "src": "1470:848:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 129,
                              "name": "_proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "1489:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                              }
                            },
                            "id": 131,
                            "indexExpression": {
                              "id": 130,
                              "name": "proposalNum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "1500:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1489:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$30_storage",
                              "typeString": "struct GOV.Proposal storage ref"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "end",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16,
                          "src": "1489:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 133,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1520:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1520:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1489:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c206861736e7420656e64656420796574",
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1537:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a7631ce4b1d67ab2ea2e3a99864ad2ef66eaa23be33f43d861743cc997b52b6d",
                          "typeString": "literal_string \"Proposal hasnt ended yet\""
                        },
                        "value": "Proposal hasnt ended yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a7631ce4b1d67ab2ea2e3a99864ad2ef66eaa23be33f43d861743cc997b52b6d",
                          "typeString": "literal_string \"Proposal hasnt ended yet\""
                        }
                      ],
                      "id": 128,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1481:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1481:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "1481:83:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1583:33:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 140,
                              "name": "_proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "1584:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                              }
                            },
                            "id": 142,
                            "indexExpression": {
                              "id": 141,
                              "name": "proposalNum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "1595:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1584:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$30_storage",
                              "typeString": "struct GOV.Proposal storage ref"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25,
                          "src": "1584:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c2068617320616c7265616479206265656e206578656375746564",
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1618:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c2018ab3281d5f803db36d5c7db0892a89e978895e4947aa99e1a29a222dff3",
                          "typeString": "literal_string \"Proposal has already been executed\""
                        },
                        "value": "Proposal has already been executed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c2018ab3281d5f803db36d5c7db0892a89e978895e4947aa99e1a29a222dff3",
                          "typeString": "literal_string \"Proposal has already been executed\""
                        }
                      ],
                      "id": 139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1575:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1575:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "1575:80:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_ProposalType_$10",
                      "typeString": "enum GOV.ProposalType"
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 148,
                          "name": "_proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "1671:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                            "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                          }
                        },
                        "id": 150,
                        "indexExpression": {
                          "id": 149,
                          "name": "proposalNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "1682:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1671:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$30_storage",
                          "typeString": "struct GOV.Proposal storage ref"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposalType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "1671:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalType_$10",
                        "typeString": "enum GOV.ProposalType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 152,
                        "name": "ProposalType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1711:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProposalType_$10_$",
                          "typeString": "type(enum GOV.ProposalType)"
                        }
                      },
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Basic",
                      "nodeType": "MemberAccess",
                      "src": "1711:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalType_$10",
                        "typeString": "enum GOV.ProposalType"
                      }
                    },
                    "src": "1671:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_ProposalType_$10",
                        "typeString": "enum GOV.ProposalType"
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 163,
                            "name": "_proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "1814:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                              "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                            }
                          },
                          "id": 165,
                          "indexExpression": {
                            "id": 164,
                            "name": "proposalNum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "1825:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1814:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$30_storage",
                            "typeString": "struct GOV.Proposal storage ref"
                          }
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "proposalType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19,
                        "src": "1814:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProposalType_$10",
                          "typeString": "enum GOV.ProposalType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 167,
                          "name": "ProposalType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1854:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ProposalType_$10_$",
                            "typeString": "type(enum GOV.ProposalType)"
                          }
                        },
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ChangeTaxesAddress",
                        "nodeType": "MemberAccess",
                        "src": "1854:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProposalType_$10",
                          "typeString": "enum GOV.ProposalType"
                        }
                      },
                      "src": "1814:71:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 214,
                    "nodeType": "IfStatement",
                    "src": "1811:500:0",
                    "trueBody": {
                      "id": 213,
                      "nodeType": "Block",
                      "src": "1886:425:0",
                      "statements": [
                        {
                          "assignments": [
                            171
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 171,
                              "mutability": "mutable",
                              "name": "approval",
                              "nodeType": "VariableDeclaration",
                              "scope": 213,
                              "src": "1901:16:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 170,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1901:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 190,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  },
                                  "id": 177,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 172,
                                        "name": "_proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 50,
                                        "src": "1921:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                          "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                                        }
                                      },
                                      "id": 174,
                                      "indexExpression": {
                                        "id": 173,
                                        "name": "proposalNum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45,
                                        "src": "1932:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1921:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$30_storage",
                                        "typeString": "struct GOV.Proposal storage ref"
                                      }
                                    },
                                    "id": 175,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "upvotes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21,
                                    "src": "1921:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "313030",
                                    "id": 176,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1955:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  },
                                  "src": "1921:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "id": 178,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1920:39:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  },
                                  "id": 187,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 179,
                                        "name": "_proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 50,
                                        "src": "1963:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                          "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                                        }
                                      },
                                      "id": 181,
                                      "indexExpression": {
                                        "id": 180,
                                        "name": "proposalNum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45,
                                        "src": "1974:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1963:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$30_storage",
                                        "typeString": "struct GOV.Proposal storage ref"
                                      }
                                    },
                                    "id": 182,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "downvotes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23,
                                    "src": "1963:33:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 183,
                                        "name": "_proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 50,
                                        "src": "1999:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                          "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                                        }
                                      },
                                      "id": 185,
                                      "indexExpression": {
                                        "id": 184,
                                        "name": "proposalNum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45,
                                        "src": "2010:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1999:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$30_storage",
                                        "typeString": "struct GOV.Proposal storage ref"
                                      }
                                    },
                                    "id": 186,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "upvotes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21,
                                    "src": "1999:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "src": "1963:67:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "id": 188,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1962:69:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "src": "1920:111:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1901:130:0"
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 191,
                              "name": "approval",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 171,
                              "src": "2063:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 192,
                              "name": "_taxesAddressChangeThreshold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "2075:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "src": "2063:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 205,
                          "nodeType": "IfStatement",
                          "src": "2060:170:0",
                          "trueBody": {
                            "id": 204,
                            "nodeType": "Block",
                            "src": "2104:126:0",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 198,
                                          "name": "_proposals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 50,
                                          "src": "2174:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                            "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                                          }
                                        },
                                        "id": 200,
                                        "indexExpression": {
                                          "id": 199,
                                          "name": "proposalNum",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45,
                                          "src": "2185:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2174:23:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$30_storage",
                                          "typeString": "struct GOV.Proposal storage ref"
                                        }
                                      },
                                      "id": 201,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "addressToChange",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 27,
                                      "src": "2174:39:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 195,
                                          "name": "_tokenAddress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 35,
                                          "src": "2140:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 194,
                                        "name": "IMonkeyMoonToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 681,
                                        "src": "2123:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IMonkeyMoonToken_$681_$",
                                          "typeString": "type(contract IMonkeyMoonToken)"
                                        }
                                      },
                                      "id": 196,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2123:31:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IMonkeyMoonToken_$681",
                                        "typeString": "contract IMonkeyMoonToken"
                                      }
                                    },
                                    "id": 197,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "changeTaxesAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 680,
                                    "src": "2123:50:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                      "typeString": "function (address) external"
                                    }
                                  },
                                  "id": 202,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2123:91:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 203,
                                "nodeType": "ExpressionStatement",
                                "src": "2123:91:0"
                              }
                            ]
                          }
                        },
                        {
                          "expression": {
                            "id": 211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 206,
                                  "name": "_proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50,
                                  "src": "2260:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                    "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                                  }
                                },
                                "id": 208,
                                "indexExpression": {
                                  "id": 207,
                                  "name": "proposalNum",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45,
                                  "src": "2271:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2260:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$30_storage",
                                  "typeString": "struct GOV.Proposal storage ref"
                                }
                              },
                              "id": 209,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "executed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25,
                              "src": "2260:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "74727565",
                              "id": 210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2295:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "2260:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 212,
                          "nodeType": "ExpressionStatement",
                          "src": "2260:39:0"
                        }
                      ]
                    }
                  },
                  "id": 215,
                  "nodeType": "IfStatement",
                  "src": "1668:643:0",
                  "trueBody": {
                    "id": 162,
                    "nodeType": "Block",
                    "src": "1730:66:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 155,
                                "name": "_proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50,
                                "src": "1745:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                  "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                                }
                              },
                              "id": 157,
                              "indexExpression": {
                                "id": 156,
                                "name": "proposalNum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45,
                                "src": "1756:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1745:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$30_storage",
                                "typeString": "struct GOV.Proposal storage ref"
                              }
                            },
                            "id": 158,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "executed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25,
                            "src": "1745:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1780:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1745:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 161,
                        "nodeType": "ExpressionStatement",
                        "src": "1745:39:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "0d56575d",
            "id": 217,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 126,
                "modifierName": {
                  "id": 125,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6439,
                  "src": "1458:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1458:11:0"
              }
            ],
            "name": "executeCurrentProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1448:2:0"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1470:0:0"
            },
            "scope": 387,
            "src": "1417:901:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 296,
              "nodeType": "Block",
              "src": "2369:638:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 223,
                              "name": "_proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "2388:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                              }
                            },
                            "id": 225,
                            "indexExpression": {
                              "id": 224,
                              "name": "proposalNum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "2399:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2388:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$30_storage",
                              "typeString": "struct GOV.Proposal storage ref"
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "start",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14,
                          "src": "2388:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 227,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2420:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2420:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2388:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74696e67206973206e6f74206f70656e",
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2437:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4bd03e1a30494a055957512ea8d56151bd2a1a9090f409d257d985dbb793b2b6",
                          "typeString": "literal_string \"Voting is not open\""
                        },
                        "value": "Voting is not open"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4bd03e1a30494a055957512ea8d56151bd2a1a9090f409d257d985dbb793b2b6",
                          "typeString": "literal_string \"Voting is not open\""
                        }
                      ],
                      "id": 222,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2380:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2380:78:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "2380:78:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 234,
                              "name": "_proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "2477:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                              }
                            },
                            "id": 236,
                            "indexExpression": {
                              "id": 235,
                              "name": "proposalNum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "2488:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2477:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$30_storage",
                              "typeString": "struct GOV.Proposal storage ref"
                            }
                          },
                          "id": 237,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "end",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16,
                          "src": "2477:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 238,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2507:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2507:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2477:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74696e6720697320636c6f736564",
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2524:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee7290904f8766469ab01017a93a06f58efe604018332076bd6b66c54b4d1379",
                          "typeString": "literal_string \"Voting is closed\""
                        },
                        "value": "Voting is closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee7290904f8766469ab01017a93a06f58efe604018332076bd6b66c54b4d1379",
                          "typeString": "literal_string \"Voting is closed\""
                        }
                      ],
                      "id": 233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2469:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2469:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "2469:74:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 249,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2596:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2596:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 246,
                                  "name": "_tokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "2571:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 245,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7296,
                                "src": "2564:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$7296_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2564:21:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$7296",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7235,
                            "src": "2564:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2564:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 252,
                          "name": "_votingThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "2611:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2564:63:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e7320666f7220766f7274696e6720726967687473",
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2629:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6478cb6d77054c533019506f690616008a73b4d8a8e6ce0e838c9006bc9d3c9f",
                          "typeString": "literal_string \"Not enough tokens for vorting rights\""
                        },
                        "value": "Not enough tokens for vorting rights"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6478cb6d77054c533019506f690616008a73b4d8a8e6ce0e838c9006bc9d3c9f",
                          "typeString": "literal_string \"Not enough tokens for vorting rights\""
                        }
                      ],
                      "id": 244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2556:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2556:112:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "2556:112:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 258,
                            "name": "_votingTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "2697:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 261,
                          "indexExpression": {
                            "expression": {
                              "id": 259,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2709:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2709:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2697:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 262,
                              "name": "_proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "2723:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                              }
                            },
                            "id": 264,
                            "indexExpression": {
                              "id": 263,
                              "name": "proposalNum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "2734:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2723:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$30_storage",
                              "typeString": "struct GOV.Proposal storage ref"
                            }
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "start",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14,
                          "src": "2723:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2697:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920766f746564",
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2754:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
                          "typeString": "literal_string \"Already voted\""
                        },
                        "value": "Already voted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
                          "typeString": "literal_string \"Already voted\""
                        }
                      ],
                      "id": 257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2689:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2689:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "2689:81:0"
                },
                {
                  "expression": {
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 270,
                        "name": "_votingTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "2781:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 273,
                      "indexExpression": {
                        "expression": {
                          "id": 271,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2793:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2793:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2781:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 274,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "2807:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2807:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2781:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "2781:41:0"
                },
                {
                  "condition": {
                    "id": 278,
                    "name": "accountVote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 219,
                    "src": "2846:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 294,
                    "nodeType": "Block",
                    "src": "2935:65:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 287,
                                "name": "_proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50,
                                "src": "2950:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                  "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                                }
                              },
                              "id": 289,
                              "indexExpression": {
                                "id": 288,
                                "name": "proposalNum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45,
                                "src": "2961:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2950:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$30_storage",
                                "typeString": "struct GOV.Proposal storage ref"
                              }
                            },
                            "id": 290,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "downvotes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23,
                            "src": "2950:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2987:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2950:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 293,
                        "nodeType": "ExpressionStatement",
                        "src": "2950:38:0"
                      }
                    ]
                  },
                  "id": 295,
                  "nodeType": "IfStatement",
                  "src": "2843:157:0",
                  "trueBody": {
                    "id": 286,
                    "nodeType": "Block",
                    "src": "2858:63:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 279,
                                "name": "_proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50,
                                "src": "2873:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                  "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                                }
                              },
                              "id": 281,
                              "indexExpression": {
                                "id": 280,
                                "name": "proposalNum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45,
                                "src": "2884:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2873:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$30_storage",
                                "typeString": "struct GOV.Proposal storage ref"
                              }
                            },
                            "id": 282,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "upvotes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "2873:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2908:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2873:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 285,
                        "nodeType": "ExpressionStatement",
                        "src": "2873:36:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "4b9f5c98",
            "id": 297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "mutability": "mutable",
                  "name": "accountVote",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "2344:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2344:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2343:18:0"
            },
            "returnParameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2369:0:0"
            },
            "scope": 387,
            "src": "2330:677:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 307,
              "nodeType": "Block",
              "src": "3086:49:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 303,
                      "name": "_proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "3104:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                        "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                      }
                    },
                    "id": 305,
                    "indexExpression": {
                      "id": 304,
                      "name": "proposalNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "3115:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3104:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$30_storage",
                      "typeString": "struct GOV.Proposal storage ref"
                    }
                  },
                  "functionReturnParameters": 302,
                  "id": 306,
                  "nodeType": "Return",
                  "src": "3097:30:0"
                }
              ]
            },
            "functionSelector": "41ec6870",
            "id": 308,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3046:2:0"
            },
            "returnParameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 301,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "3069:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proposal_$30_memory_ptr",
                    "typeString": "struct GOV.Proposal"
                  },
                  "typeName": {
                    "id": 300,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 299,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30,
                      "src": "3069:8:0"
                    },
                    "referencedDeclaration": 30,
                    "src": "3069:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$30_storage_ptr",
                      "typeString": "struct GOV.Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3068:17:0"
            },
            "scope": 387,
            "src": "3019:116:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 327,
              "nodeType": "Block",
              "src": "3226:105:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 317,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "3245:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 318,
                          "name": "proposalNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "3254:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "3245:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e646578206f7574206f662072616e6765",
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3267:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9580fd05844cb84bf0a747c48ec42a21f1dca0bc044d3619707fb319eddae0d",
                          "typeString": "literal_string \"Index out of range\""
                        },
                        "value": "Index out of range"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9580fd05844cb84bf0a747c48ec42a21f1dca0bc044d3619707fb319eddae0d",
                          "typeString": "literal_string \"Index out of range\""
                        }
                      ],
                      "id": 316,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3237:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3237:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "3237:51:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 323,
                      "name": "_proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "3306:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                        "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                      }
                    },
                    "id": 325,
                    "indexExpression": {
                      "id": 324,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 310,
                      "src": "3317:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3306:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$30_storage",
                      "typeString": "struct GOV.Proposal storage ref"
                    }
                  },
                  "functionReturnParameters": 315,
                  "id": 326,
                  "nodeType": "Return",
                  "src": "3299:24:0"
                }
              ]
            },
            "functionSelector": "37e9b9a7",
            "id": 328,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProposalByIndex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 310,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 328,
                  "src": "3175:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 309,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3175:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3174:14:0"
            },
            "returnParameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 314,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 328,
                  "src": "3209:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proposal_$30_memory_ptr",
                    "typeString": "struct GOV.Proposal"
                  },
                  "typeName": {
                    "id": 313,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 312,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30,
                      "src": "3209:8:0"
                    },
                    "referencedDeclaration": 30,
                    "src": "3209:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$30_storage_ptr",
                      "typeString": "struct GOV.Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3208:17:0"
            },
            "scope": 387,
            "src": "3147:184:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 385,
              "nodeType": "Block",
              "src": "3396:559:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 334,
                      "name": "proposalNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "3410:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3424:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3410:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 357,
                  "nodeType": "IfStatement",
                  "src": "3407:263:0",
                  "trueBody": {
                    "id": 356,
                    "nodeType": "Block",
                    "src": "3426:244:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 338,
                                    "name": "_proposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 50,
                                    "src": "3449:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                      "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                                    }
                                  },
                                  "id": 340,
                                  "indexExpression": {
                                    "id": 339,
                                    "name": "proposalNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45,
                                    "src": "3460:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3449:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$30_storage",
                                    "typeString": "struct GOV.Proposal storage ref"
                                  }
                                },
                                "id": 341,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "end",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 16,
                                "src": "3449:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 342,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "3479:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 343,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "3479:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3449:45:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43757272656e742070726f706f73616c206e6565647320746f20656e64206265666f72652061206e6577206f6e652063616e2062652063726561746564",
                              "id": 345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3496:63:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_065e43b5ef1d4e76d7edd0fbe0a29f349b29104487f97e8b32ca1643b06c678e",
                                "typeString": "literal_string \"Current proposal needs to end before a new one can be created\""
                              },
                              "value": "Current proposal needs to end before a new one can be created"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_065e43b5ef1d4e76d7edd0fbe0a29f349b29104487f97e8b32ca1643b06c678e",
                                "typeString": "literal_string \"Current proposal needs to end before a new one can be created\""
                              }
                            ],
                            "id": 337,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3441:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3441:119:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 347,
                        "nodeType": "ExpressionStatement",
                        "src": "3441:119:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 349,
                                  "name": "_proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50,
                                  "src": "3583:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                                    "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                                  }
                                },
                                "id": 351,
                                "indexExpression": {
                                  "id": 350,
                                  "name": "proposalNum",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45,
                                  "src": "3594:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3583:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$30_storage",
                                  "typeString": "struct GOV.Proposal storage ref"
                                }
                              },
                              "id": 352,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "executed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25,
                              "src": "3583:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43757272656e742070726f706f73616c20686173206e6f74206265656e206578656375746564",
                              "id": 353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3617:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a9d4a1a1f8ea8c67a10cb82cd451dac7c75d124426d7a37aed61b7b36fe04a84",
                                "typeString": "literal_string \"Current proposal has not been executed\""
                              },
                              "value": "Current proposal has not been executed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a9d4a1a1f8ea8c67a10cb82cd451dac7c75d124426d7a37aed61b7b36fe04a84",
                                "typeString": "literal_string \"Current proposal has not been executed\""
                              }
                            ],
                            "id": 348,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3575:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3575:83:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 355,
                        "nodeType": "ExpressionStatement",
                        "src": "3575:83:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 359,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 331,
                            "src": "3698:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$30_memory_ptr",
                              "typeString": "struct GOV.Proposal memory"
                            }
                          },
                          "id": 360,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "start",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14,
                          "src": "3698:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 361,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3715:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3715:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3698:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c206e6565647320746f20626520696e2074686520667574757265",
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3732:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b54396c962020cdeb47afea5d4fe26f8a3f301ae583ed844e999bb77ee3a0b8",
                          "typeString": "literal_string \"Proposal needs to be in the future\""
                        },
                        "value": "Proposal needs to be in the future"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b54396c962020cdeb47afea5d4fe26f8a3f301ae583ed844e999bb77ee3a0b8",
                          "typeString": "literal_string \"Proposal needs to be in the future\""
                        }
                      ],
                      "id": 358,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3690:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3690:79:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "3690:79:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 368,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 331,
                            "src": "3788:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$30_memory_ptr",
                              "typeString": "struct GOV.Proposal memory"
                            }
                          },
                          "id": 369,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "start",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14,
                          "src": "3788:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 370,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 331,
                            "src": "3805:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$30_memory_ptr",
                              "typeString": "struct GOV.Proposal memory"
                            }
                          },
                          "id": 371,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "end",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16,
                          "src": "3805:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3788:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456e64206f662070726f706f73616c206e65656473206265206166746572207374617274",
                        "id": 373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3819:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_021bbc0d0cd3b18cd09c04eb2ee2bea6559b9c286ce3e8b0e320c330e50d21c4",
                          "typeString": "literal_string \"End of proposal needs be after start\""
                        },
                        "value": "End of proposal needs be after start"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_021bbc0d0cd3b18cd09c04eb2ee2bea6559b9c286ce3e8b0e320c330e50d21c4",
                          "typeString": "literal_string \"End of proposal needs be after start\""
                        }
                      ],
                      "id": 367,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3780:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3780:78:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 375,
                  "nodeType": "ExpressionStatement",
                  "src": "3780:78:0"
                },
                {
                  "expression": {
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3889:13:0",
                    "subExpression": {
                      "id": 376,
                      "name": "proposalNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "3889:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 378,
                  "nodeType": "ExpressionStatement",
                  "src": "3889:13:0"
                },
                {
                  "expression": {
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 379,
                        "name": "_proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "3913:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Proposal_$30_storage_$",
                          "typeString": "mapping(uint32 => struct GOV.Proposal storage ref)"
                        }
                      },
                      "id": 381,
                      "indexExpression": {
                        "id": 380,
                        "name": "proposalNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "3924:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3913:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$30_storage",
                        "typeString": "struct GOV.Proposal storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 382,
                      "name": "proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 331,
                      "src": "3939:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$30_memory_ptr",
                        "typeString": "struct GOV.Proposal memory"
                      }
                    },
                    "src": "3913:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$30_storage",
                      "typeString": "struct GOV.Proposal storage ref"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "3913:34:0"
                }
              ]
            },
            "id": 386,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 331,
                  "mutability": "mutable",
                  "name": "proposal",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "3361:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proposal_$30_memory_ptr",
                    "typeString": "struct GOV.Proposal"
                  },
                  "typeName": {
                    "id": 330,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 329,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30,
                      "src": "3361:8:0"
                    },
                    "referencedDeclaration": 30,
                    "src": "3361:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$30_storage_ptr",
                      "typeString": "struct GOV.Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3360:26:0"
            },
            "returnParameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3396:0:0"
            },
            "scope": 387,
            "src": "3339:616:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 388,
        "src": "190:3768:0"
      }
    ],
    "src": "33:3929:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-01-31T19:31:31.730Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}